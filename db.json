{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1481648851000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1481648851000},{"_id":"source/.DS_Store","hash":"3683d2a663eca056be88d4ac14dcc352d5f9b2d6","modified":1505723750000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1481648851000},{"_id":"themes/next/.DS_Store","hash":"c89ac400a9c067ddc5bf5f3dd56329155609824c","modified":1481650461000},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1481648851000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1481648851000},{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1481648851000},{"_id":"themes/next/_config.yml","hash":"47121c0718e4434d7c90aca32d48d192a7d5e281","modified":1482166109000},{"_id":"themes/next/gulpfile.coffee","hash":"61ef0606a8134894d7ac796bc8d0fa4ba6a94483","modified":1481648851000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1481648851000},{"_id":"themes/next/bower.json","hash":"5abc236d9cc2512f5457ed57c1fba76669eb7399","modified":1481648851000},{"_id":"themes/next/package.json","hash":"877cb98025e59015532c4c9a04a33e2af4ad56f9","modified":1481648851000},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1505545529000},{"_id":"source/_posts/Version-number-contrast.md","hash":"06de206d995f7ec984ecd528c9fe54afadfcadc1","modified":1505546067000},{"_id":"source/_posts/Element-Vs-Node.md","hash":"8976fe169fbd68f6b427b6d2a245fec6829968ef","modified":1505701710000},{"_id":"source/_posts/md-syntax.md","hash":"c4a7b0a0697dfe0b481321c833ebcdfefec494ab","modified":1505725167000},{"_id":"source/_posts/pvue.md","hash":"770c8cc957c12ce47ce205e82ec4ef0bd0b48401","modified":1505831660000},{"_id":"source/_posts/rollup-js.md","hash":"93c7f4acee868354c663a72f50d8d8acafc1416c","modified":1505715927000},{"_id":"source/_posts/something.md","hash":"b16119f2dacbba021f8eadf165a5da3ef5bff846","modified":1505833945000},{"_id":"source/_posts/使用git钩子做eslint校验.md","hash":"4dba5bcd64b0b0c9740074a73474013536175a89","modified":1505989165000},{"_id":"source/_posts/syncRequest.md","hash":"bca377f0ba1679591f8826da1ddd28d9fff7f574","modified":1505971204000},{"_id":"source/_posts/关于vue.md","hash":"2ebe9b5c66e2d583e020a92383cf34f47a6939e4","modified":1505723242000},{"_id":"source/_posts/实现一个CMD模块加载器.md","hash":"f5aa1789a55bdf0ff26f9cbe95b7e4a7f05d9635","modified":1505921799000},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1481648851000},{"_id":"themes/next/.git/ORIG_HEAD","hash":"93d0f27eb58dcc033accd3711a6d88c269c8e1e8","modified":1481649208000},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1481648851000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1481648829000},{"_id":"themes/next/.git/packed-refs","hash":"80908fda4226cdf164a41c85c7fbea49cb816125","modified":1481648851000},{"_id":"themes/next/.git/index","hash":"41dce325fcdfa7e1f1d1f6271926b11f2b9492cc","modified":1505708384000},{"_id":"themes/next/.git/FETCH_HEAD","hash":"0b8e277a9a80ee49b01159050604b5f0e287f6d7","modified":1505707986000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1481648851000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1481648851000},{"_id":"themes/next/languages/de.yml","hash":"1fdea1f84b7f691f5b4dd4d2b43eeb27b10fa0c8","modified":1481648851000},{"_id":"themes/next/languages/en.yml","hash":"40057d6608e825d06e0864bac4dcd27ed88ada87","modified":1481648851000},{"_id":"themes/next/languages/default.yml","hash":"767470a80dc257e23e14c3a78e8c52a46c9d6209","modified":1481648851000},{"_id":"themes/next/languages/fr-FR.yml","hash":"9fca01ef917d33ae2ae6bc04561ec6799dff5351","modified":1481648851000},{"_id":"themes/next/languages/id.yml","hash":"34396bef27c4ab9e9a3c5d3e3aa94b0e3b3a7b0d","modified":1481648851000},{"_id":"themes/next/languages/ja.yml","hash":"49f12149edcc1892b26a6207328cda64da20116d","modified":1481648851000},{"_id":"themes/next/languages/pt.yml","hash":"6b660b117314cad93f08757601df3adb04c68beb","modified":1481648851000},{"_id":"themes/next/languages/ko.yml","hash":"b6bc5d6b0c000deb44099b42d3aebb8c49dbfca9","modified":1481648851000},{"_id":"themes/next/languages/pt-BR.yml","hash":"7742ba4c0d682cbe1d38305332ebc928abd754b5","modified":1481648851000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"e731ffe87a41a7132d20a2c8b2be05e59f101dc0","modified":1482161232000},{"_id":"themes/next/languages/ru.yml","hash":"257d11e626cbe4b9b78785a764190b9278f95c28","modified":1481648851000},{"_id":"themes/next/languages/zh-hk.yml","hash":"34c84c6d04447a25bd5eac576922a13947c000e2","modified":1481648851000},{"_id":"themes/next/languages/zh-tw.yml","hash":"c97a5c41149de9b17f33439b0ecf0eff6fdae50e","modified":1481648851000},{"_id":"themes/next/layout/_layout.swig","hash":"7a1e4443c3ba1e08c20e64ddbf0b8255d034dab0","modified":1481648851000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1481648851000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1481648851000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1481648851000},{"_id":"themes/next/layout/page.swig","hash":"3727fab9dadb967e9c2204edca787dc72264674a","modified":1481648851000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1481648851000},{"_id":"themes/next/layout/schedule.swig","hash":"1f1cdc268f4ef773fd3ae693bbdf7d0b2f45c3a3","modified":1481648851000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1481648851000},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1481648851000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1481648851000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1481648851000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1481648851000},{"_id":"themes/next/source/.DS_Store","hash":"b927362dd5465caa5201a852ee5a7976c32644ca","modified":1481650461000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1481648851000},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1481648829000},{"_id":"themes/next/.git/logs/HEAD","hash":"50ee1178f2212be5458fa20cc50110ab81cfe9e8","modified":1481648851000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1481648829000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1481648829000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1481648829000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1481648829000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1481648829000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1481648829000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1481648829000},{"_id":"themes/next/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1481648829000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1481648829000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1481648851000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1481648851000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"43c3433155ccd9abcbe7dce2e6bfa1f3a66af18b","modified":1481648851000},{"_id":"themes/next/layout/_macro/post.swig","hash":"f12f108c1f8e91cc55d49805d42c1fd96cdf51a6","modified":1481648851000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1481648851000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1481648851000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1481648851000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"b8aaa008aafe4c6e325f7513719e1c251430883e","modified":1481648851000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"7a3ef28678467c45ee9416b41b943252e8036285","modified":1481648851000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1481648851000},{"_id":"themes/next/layout/_partials/header.swig","hash":"f3627f51810bc906e4020a3fef61bc3629b63581","modified":1481648851000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"39d613e5a9f8389d4ea52d6082502af8e833b9f2","modified":1481648851000},{"_id":"themes/next/layout/_partials/head.swig","hash":"ca56f92e2fa82b03853869f5073ee1a5626a4796","modified":1481648851000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1481648851000},{"_id":"themes/next/layout/_partials/search.swig","hash":"1431719d1dbba3f5ee385eebc46376d1a960b2d5","modified":1481648851000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1481648851000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1481648851000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1481648851000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"0b91cadecead8e0b5211cc42b085998d94af503a","modified":1481648851000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1481648851000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1481648851000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1481648851000},{"_id":"themes/next/scripts/tags/note.js","hash":"6752925eedbdb939d8ec4d11bdfb75199f18dd70","modified":1481648851000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1481648851000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1481648851000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1481648851000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1481648851000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1481648851000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1481648851000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1481648851000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1481648851000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1481648851000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1481648851000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1481648851000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1481648851000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1481648851000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1481648851000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1481648851000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1481648851000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1481648851000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1481648851000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1481648851000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1481648851000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1481648851000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1481648851000},{"_id":"themes/next/.git/objects/01/cfe2e06ef24aa876c03d2f5b665c21c1d22dfd","hash":"625134a85cd87ad9d46e474fdc6dcd3d115bdda1","modified":1505689601000},{"_id":"themes/next/.git/objects/0d/fc37b2a43e9b81e9890215739396c8dec76da6","hash":"0dd608b2ca21c1a7e49c1b5197dd5570446596d4","modified":1505607173000},{"_id":"themes/next/.git/objects/0f/fe08bb57eba004253ba529b18fa25e386ca0bc","hash":"453fb606650cdba7f3d332a0e74381e5456f8d20","modified":1505689601000},{"_id":"themes/next/.git/objects/1a/73714d2d9297d6dcbb4a2ed1f2438f4c065779","hash":"5bf4347fea13db4b9f3bb2673fb89a9371ba0df7","modified":1505607173000},{"_id":"themes/next/.git/objects/1d/6d15a24d590b0fba281091169a43aae3165212","hash":"afd9256f13320044dcd0da9455237fc0a8ffbc22","modified":1505607173000},{"_id":"themes/next/.git/objects/1f/6dc822492b4246911f82883d7e4523e0ece9fc","hash":"1f971fcdbf196263caaebf19be6cfe8e50417de6","modified":1505607173000},{"_id":"themes/next/.git/objects/19/f81169956a5ddb31e327edb44f4124f403003f","hash":"9c524210cb6ebbc7472922f220c27b5f8c5c34ea","modified":1505607173000},{"_id":"themes/next/.git/objects/22/2719bb73ac13ef3dc2a42dd5241a345355c6de","hash":"452ddaaa78fa77286cf428dfaf5b4c39d7a6bb3f","modified":1505607173000},{"_id":"themes/next/.git/objects/1f/85ef8c042b7da476f4a9dc525ac0493329761f","hash":"04d346864f4fc02594f6b700be911d78725c3d83","modified":1505689601000},{"_id":"themes/next/.git/objects/2a/008cb3f7dbaff494b0bd6526d7741f4ab5fb88","hash":"5f3e6c4baf0d72ca616a20e9258e8fb62a404434","modified":1505607173000},{"_id":"themes/next/.git/objects/30/e9deda7812c3703fb257d7c64cebdd122dbc69","hash":"aebccd7a03c84c847a8bebad8fe09f9bdccfd3dc","modified":1505689601000},{"_id":"themes/next/.git/objects/25/c19404e49d4217f51d524260391a6c3f309a3c","hash":"dd21d0e55f55e1007c4bca0f22adffa47384aeab","modified":1505668323000},{"_id":"themes/next/.git/objects/4b/e6a31ace186a3a70e4917061f079301b0c310f","hash":"ee8fc806e1f211ff57ceb7bddf8adc604ab16557","modified":1505668323000},{"_id":"themes/next/.git/objects/31/7ae5e72c2d2c1e54a6befe8f9bb5eb3739e97a","hash":"94aae43690544344fe32742204b8bc99607d6d58","modified":1505668323000},{"_id":"themes/next/.git/objects/2f/1a0fc126f4341393d10069b25733bd1df05491","hash":"66d35fbcfd62f9c2ce5f123e6d692087966e07b2","modified":1505668323000},{"_id":"themes/next/.git/objects/57/641f69b3780f1a46e4291c6647171c4d318594","hash":"32afdb03646cce6725f40c84651a8f513f30ec35","modified":1505668323000},{"_id":"themes/next/.git/objects/00/4a86c5d63d1e346002de7871262830917cb48e","hash":"89a02ee0ba480f09571a7aaa27a65e404f251677","modified":1505607173000},{"_id":"themes/next/.git/objects/4c/72a380a6db8611602b4da3840a5a47c85c5f26","hash":"e1727af316e942c2e6c6d65bc03ad7c8cc06624d","modified":1505607173000},{"_id":"themes/next/.git/objects/5b/f6c21ea991dfea505906d3f0c9b1f7159746dc","hash":"7bba60783315beef409190717dac66a81c5591eb","modified":1505668323000},{"_id":"themes/next/.git/objects/79/cd1e9c9bf967fccbbd3892a19fba8542be30b8","hash":"dbff6a66ee9ff7a2703e7fdad32ca9d772528ccd","modified":1505607173000},{"_id":"themes/next/.git/objects/70/534ed7577c1e440877fd611a2945b7d592bc7f","hash":"5d5433465de8dc6ab9aa3d7c8c76f6ff7ef61abb","modified":1505607173000},{"_id":"themes/next/.git/objects/8a/13130e5253ebc285bde498b9e5e1c26a2788f5","hash":"7a0048fafbf68a7f8e0d58d38472ec647d08b9d1","modified":1505607173000},{"_id":"themes/next/.git/objects/91/8dd104f5b8ec077361bf0a7da59e299e7f8ef0","hash":"427f1a5c270a1f5ac119f34949bd940cbb8b8b47","modified":1505668323000},{"_id":"themes/next/.git/objects/55/78e52cb9d5c03627ca053691da06ee602994ff","hash":"fa6e7a089356f23ac963086480c6ff52da27c51d","modified":1505607173000},{"_id":"themes/next/.git/objects/88/078de48f53e391ee2c2040e8b2a4bfb901b1a7","hash":"92d18b65cdfbcc2a3b3a8081d11465381b9d64e5","modified":1505668323000},{"_id":"themes/next/.git/objects/a0/54ef009a7f68236214f4cf02c116074a5e8036","hash":"a4c8ec88b0c24518349eaa2ae9ac7e4054d39a10","modified":1505689601000},{"_id":"themes/next/.git/objects/8b/7d2f7aeb918071e9e90ab033b57c179877bf52","hash":"ec9fac7865a8e8b8947335b8898ecd14669db5e5","modified":1505668323000},{"_id":"themes/next/.git/objects/99/7d18404cb451a27277663d326fe1121ebe1342","hash":"8a2953bc4ab628784d0c525547790350786e1da1","modified":1505607173000},{"_id":"themes/next/.git/objects/a0/fb96539ce410552f10b370cc3f9e0f3a181df9","hash":"1fcc16e224766a1f6d04f6382ddf82398d5d8a10","modified":1505607173000},{"_id":"themes/next/.git/objects/9a/1888d55dcdb39ff8ef1cd191ab535d5d4a3e57","hash":"5163a2cbb3ebe06fd8b76551e33d6be36310e71b","modified":1505689601000},{"_id":"themes/next/.git/objects/ad/3d4a7f7ead2bc42fcb666ef35777c8c1c1e753","hash":"7fb1cc45a817ebd8f56fc870fee3d716af171453","modified":1505689601000},{"_id":"themes/next/.git/objects/a2/7ed1132b4a930673a5eca6fefa23afa4f66119","hash":"3bd1efda51f70738a14f78adbe494de500f416c2","modified":1505607173000},{"_id":"themes/next/.git/objects/99/dfbcb7402c79c936dd514ce28b0ce93e38609a","hash":"093a2789cb976a32148d878a9fec67c0cf25c25f","modified":1505689601000},{"_id":"themes/next/.git/objects/ad/bcdd37be07bdeb491c08f6716733d642622374","hash":"016340b27316fc5f00dcc9acdc18f489a3afa897","modified":1505607173000},{"_id":"themes/next/.git/objects/b5/f7ef40b5f62f36f292f6fe789e32f847f640ea","hash":"43954df07f6c01ce9d57b77a9d9d1bcab76c66a1","modified":1505607173000},{"_id":"themes/next/.git/objects/b2/c1edf0708e5845e0bd5de1a602bac1a16581cc","hash":"dee1a3d521e3538c5d1fad7a8ccabf75fe8b2a62","modified":1505689601000},{"_id":"themes/next/.git/objects/bf/e970850f757f26f0af361f17e1a61fdd1c8e46","hash":"86f1b0b62d45002496d9e9d2715959fe205c761d","modified":1505607173000},{"_id":"themes/next/.git/objects/c5/1f0ef4da4af2dfe6b0538abd8938dd3f941088","hash":"455926c3b44275634536a2cc5cfd1ebb3e72df98","modified":1505607173000},{"_id":"themes/next/.git/objects/cb/96cf01b276ba3feb483586837f23f4d8da2a47","hash":"a8b49a659f0619b64cf62188ba3c768aa19bbdfc","modified":1505607173000},{"_id":"themes/next/.git/objects/cb/21f4ceccdd6d00fc0e4b72bc6bdef427bb44c4","hash":"dec38db1526a3520b9c4eef2abca628044d13c1a","modified":1505668323000},{"_id":"themes/next/.git/objects/d4/38deb80d4c8d9c3a591431748816c4db6c2db4","hash":"802771fe2aca51af9f071c53f2456a0eca4fab10","modified":1505668323000},{"_id":"themes/next/.git/objects/db/9cf29bb4021c3df299231b1a3a1760a0d60b81","hash":"d6ad8348f31f5a4bf7f4d8d35ecce71c2402978d","modified":1505607173000},{"_id":"themes/next/.git/objects/e1/7bd56c193236794a05a14db9e7425e48c86232","hash":"c178682d0c0b87ec4e3f2de62cb086d15239f865","modified":1505668323000},{"_id":"themes/next/.git/objects/dc/d1c06713351a33d9770085a0e76c31c498d3b6","hash":"99a03655a72df0d4044c784ad2b903f0bff1b9c3","modified":1505607173000},{"_id":"themes/next/.git/objects/e5/c0956c476f08ba184ba5d006051d38db116a6f","hash":"86bb48e496b22c8e36c3d9def87401f0aa18712e","modified":1505689601000},{"_id":"themes/next/.git/objects/ee/30b444c8b0fe1db97b4ef47dafdac2ec8d13db","hash":"99520e7fd703d4d26f78c3dd7c9920761c643a35","modified":1505607173000},{"_id":"themes/next/.git/objects/ea/18328b8c50d27fef167d29dc34e3a315d44afe","hash":"133cd1cef152c3de6634c9e6a17dbe4b8729e9c6","modified":1505668323000},{"_id":"themes/next/.git/objects/f1/5022e2993e945c7e9d057c31afa849ed2598ef","hash":"b451cbb27aa1641c60ae266d3505b29adaa1b92f","modified":1505607173000},{"_id":"themes/next/.git/objects/f8/149badd640fd0458462a6427dd7e8eeb377dd8","hash":"b50858d40bfb360b629f94a974aac14ad463a2e1","modified":1505607173000},{"_id":"themes/next/.git/objects/ed/d1ff0fd8eb084f0d9438c47481c21a69aabe6e","hash":"b0a7003799c3c83046ba6ef882b359471280e38f","modified":1505607173000},{"_id":"themes/next/.git/objects/fa/286ec72af7d30d9b6643ad264e2adba70c2b30","hash":"6a855dc629eadf6688e66910b9ef05473c8735cc","modified":1505668323000},{"_id":"themes/next/.git/objects/fd/bed59b095af298a6052a38bea5e0d424eb0e7d","hash":"80192b7649b7d048c45bc42416d6a1f1a1f7b73c","modified":1505607173000},{"_id":"themes/next/.git/refs/heads/master","hash":"93d0f27eb58dcc033accd3711a6d88c269c8e1e8","modified":1481648851000},{"_id":"themes/next/.git/objects/ff/cc526157d0a717d00c22aa543abddc3fb8b45d","hash":"4d6c48f693268e811b1ce665a06bb4ce482eb6e7","modified":1505668323000},{"_id":"themes/next/.git/refs/tags/v5.1.2","hash":"75173e2dd18a6221ff84742ff53d01ac5c6e04b0","modified":1505545823000},{"_id":"themes/next/.git/refs/tags/v5.1.1","hash":"3caf2cc30e2bc17ce7c8decb48064104d4845453","modified":1505545823000},{"_id":"themes/next/layout/_components/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1481648851000},{"_id":"themes/next/layout/_components/algolia-search/dom.swig","hash":"636f1181dd5887a70b4a08ca8f655d4e46635792","modified":1481648851000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1481648851000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1481648851000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1481648851000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1481648851000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1481648851000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1481648851000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1481648851000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1481648851000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1481648851000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1481648851000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1481648851000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"394d9fff7951287cc90f52acc2d4cbfd1bae079d","modified":1481648851000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1481648851000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"82a2ac14d4200480a36bf10abcc3cc554ad744d6","modified":1481648851000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"b460e27db3dcd4ab40b17d8926a5c4e624f293a9","modified":1481648851000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1481648851000},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1481648851000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1481648851000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1481648851000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1481648851000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1481648851000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c5b28519b446c2af1e8754a6ae4d766823e6b348","modified":1481648851000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1481648851000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"3f0d6aa424f434e82ea507f740eeff110f996269","modified":1481648851000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1481648851000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1481648851000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1481648851000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1481648851000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1481648851000},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1481648851000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1481648851000},{"_id":"themes/next/source/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1481648851000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1481648851000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1481648851000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1481648851000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1481648851000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1481648851000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"c1072942459fa0880e8a33a1bd929176b62b4171","modified":1481648851000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1481648851000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1481648851000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1481648851000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1481648851000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1481648851000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1481648851000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1481648851000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1481648851000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1481648851000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1481648851000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1481648851000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1481648851000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1481648851000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1481648851000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1481648851000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1481648851000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1481648851000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1481648851000},{"_id":"themes/next/.git/objects/pack/pack-a73119fdf08e8db24b2ed011b8b390cbb21b972c.idx","hash":"b1fe05ab71912c517cd1832c0fda5d8220ae3d17","modified":1505545823000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1481648851000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"50ee1178f2212be5458fa20cc50110ab81cfe9e8","modified":1481648851000},{"_id":"themes/next/.git/refs/remotes/origin/master","hash":"3c0f00866e447c5aac0d0f5a19f64e784b90f7b0","modified":1505689601000},{"_id":"themes/next/.git/refs/remotes/origin/revert-1807-master","hash":"b65be276327d137f2161d315336cb93d5c1eff07","modified":1505545823000},{"_id":"themes/next/.git/refs/remotes/origin/servant","hash":"ee903ee2112907f4498fdb13674a640c685e95fb","modified":1505545823000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1481648851000},{"_id":"themes/next/.git/refs/remotes/origin/testing","hash":"15660a56eaab85fc3fd3324de8d61dbc2b09b42a","modified":1505545823000},{"_id":"themes/next/.git/refs/remotes/origin/dev","hash":"9d2c0a9ea0a9e1d5378f6aff74f50a11fe3bd73e","modified":1505545823000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1481648851000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1481648851000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1481648851000},{"_id":"themes/next/layout/_scripts/third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1481648851000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1481648851000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1481648851000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"fb1d04ede838b52ca7541973f86c3810f1ad396e","modified":1481648851000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1481648851000},{"_id":"themes/next/layout/_scripts/third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1481648851000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1481648851000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1481648851000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1481648851000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1481648851000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1481648851000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1481648851000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1481648851000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1481648851000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1481648851000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1481648851000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1481648851000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1481648851000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1481648851000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1481648851000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1481648851000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1481648851000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1481648851000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1481648851000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1481648851000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"be22ad34f546a07f6d56b424338cdd898683eea4","modified":1481648851000},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1481648851000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"7b206cd8921bc042f8e37a74aea1abc8a5ec8ab4","modified":1481648851000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1481648851000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d4b7bd610ca03dbb2f5b66631c0e84a79fb4660b","modified":1481648851000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1481648851000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"1b10ba2d3ad0c063c418dc94a0b7e0db4b342c53","modified":1481648851000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"9ccee9189c910b8a264802d7b2ec305d12dedcd0","modified":1481648851000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1481648851000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1481648851000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1481648851000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1481648851000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1481648851000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1481648851000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1481648851000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1481648851000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1481648851000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1481648851000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1481648851000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1481648851000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1481648851000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1481648851000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1481648851000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1481648851000},{"_id":"themes/next/.git/objects/pack/pack-584c4779d0e5ae85d6252d0b833876f5abcf5d8c.idx","hash":"345bf79d737a23090d853a00fe0daba4d889e5df","modified":1481648851000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1481648851000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1481648851000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1481648851000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1481648851000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1481648851000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"50ee1178f2212be5458fa20cc50110ab81cfe9e8","modified":1481648851000},{"_id":"themes/next/.git/logs/refs/remotes/origin/master","hash":"9a3037ebaba227dfa0961c571b90e281985c549e","modified":1505689601000},{"_id":"themes/next/.git/logs/refs/remotes/origin/revert-1807-master","hash":"19a1e639ba6e6f08baf95e778c23fe6ecbb37d37","modified":1505545823000},{"_id":"themes/next/.git/logs/refs/remotes/origin/servant","hash":"fe6615a915b50aab0584f83360ee26f721b2db34","modified":1505545823000},{"_id":"themes/next/.git/logs/refs/remotes/origin/testing","hash":"f7070e6f01777ed3bab7ec2eb57c973bfae630a3","modified":1505545823000},{"_id":"themes/next/.git/logs/refs/remotes/origin/dev","hash":"8866aebde0097eb3b45c5a2d00e79fa36da53f83","modified":1505545823000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4b7f81e1006e7acee3d1c840ccba155239f830cc","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"c6dab7661a6b8c678b21b7eb273cef7100f970f6","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"7f1aab694caf603809e33cff82beea84cd0128fd","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"4eb18b12fa0ea6c35925d9a64f64e2a7dae8c7fd","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"74d0ba86f698165d13402670382a822c8736a556","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"3eb73cee103b810fa56901577ecb9c9bb1793cff","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"eba491ae624b4c843c8be4c94a044085dad4ba0f","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"5433b6bc9d8f0c4685e760b326445ac51245b0a8","modified":1481648851000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"637c6b32c58ecf40041be6e911471cd82671919b","modified":1481648851000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1481648851000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1481648851000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1481648851000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1481648851000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1481648851000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1481648851000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1481648851000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1481648851000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1481648851000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1481648851000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1481648851000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1481648851000},{"_id":"themes/next/.git/objects/pack/pack-a73119fdf08e8db24b2ed011b8b390cbb21b972c.pack","hash":"8817c6dc208154ffc873bf12b672d9410ee4cda5","modified":1505545823000},{"_id":"themes/next/.git/objects/pack/pack-584c4779d0e5ae85d6252d0b833876f5abcf5d8c.pack","hash":"7d6ba5589af5ef9aa965ea884f42621d9a6a86dd","modified":1481648851000},{"_id":"public/2017/09/20/实现一个CMD模块加载器/index.html","hash":"0dc3212e3b704ba406d68f096ea6d651f8ed66f0","modified":1505989363467},{"_id":"public/2017/09/19/pvue/index.html","hash":"4855d0dbe199d60b0ff69f1037137fb10c994751","modified":1505989363468},{"_id":"public/2017/09/18/关于vue/index.html","hash":"ed6774c0f0b9583bcd2e48d30454766e3c39a1b9","modified":1505989363468},{"_id":"public/2017/09/18/something/index.html","hash":"83fff91563c81695731bfa7cc7fb58fbd797ad0f","modified":1505989363468},{"_id":"public/2017/09/18/Element-Vs-Node/index.html","hash":"a965e2d90ea7732664dca3f854cb677142d748cb","modified":1505989363468},{"_id":"public/2017/09/16/md-syntax/index.html","hash":"e79841018e3c4af8e097076ad5e7bb1b2bf4e5fc","modified":1505989363468},{"_id":"public/2017/09/16/Version-number-contrast/index.html","hash":"804b820ef2231309ff67e18b24041be7467edd2f","modified":1505989363468},{"_id":"public/2017/09/16/hello-world/index.html","hash":"c84ba2109e0af91ca46134489098d91f5d10f884","modified":1505989363468},{"_id":"public/page/2/index.html","hash":"0cd4ab1f156630717c57fda24c90907fe39448f8","modified":1505989363468},{"_id":"public/archives/index.html","hash":"959e46970270a2a04f48e4a35578693e6d9835b7","modified":1505989363468},{"_id":"public/archives/page/2/index.html","hash":"d14411020241875f9b96bbd2258f796887223011","modified":1505989363468},{"_id":"public/archives/2017/index.html","hash":"e824ebb71f814dae83e062836b7ef0d219bad9a5","modified":1505989363468},{"_id":"public/archives/2017/page/2/index.html","hash":"9d63666fdccfc789187891f591d1e4581728ccab","modified":1505989363468},{"_id":"public/archives/2017/09/index.html","hash":"c49ae7e26f133cbcd62be922dac34bbf1b7fffbf","modified":1505989363468},{"_id":"public/archives/2017/09/page/2/index.html","hash":"9c84dec6b88cb22d31be1e4adbbaad73bc7f283f","modified":1505989363468},{"_id":"public/2017/09/21/使用git钩子做eslint校验/index.html","hash":"b3b7926b80d685b2de9492327b473e819e8217fe","modified":1505989363468},{"_id":"public/2017/09/21/syncRequest/index.html","hash":"cb8a02097daef439eab7f257f47216f1dbcad958","modified":1505989363468},{"_id":"public/2017/09/16/rollup-js/index.html","hash":"06c7bd6af1077f04a3f6251ecfc80f5648f4d022","modified":1505989363468},{"_id":"public/index.html","hash":"07e1fda9033d3b3c2f1044ecd4ff545fece10ef1","modified":1505989363468},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1505989363477},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1505989363477},{"_id":"public/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1505989363478},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1505989363478},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1505989363478},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1505989363478},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1505989363478},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1505989363478},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1505989363478},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1505989363478},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1505989363478},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1505989363478},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1505989363478},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1505989363478},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1505989363478},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1505989363478},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1505989363478},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1505989363478},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1505989363478},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1505989363478},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1505989363478},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1505989363478},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1505989363478},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1505989363478},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1505989364058},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1505989364068},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1505989364072},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1505989364072},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1505989364079},{"_id":"public/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1505989364079},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1505989364079},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1505989364079},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1505989364079},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1505989364079},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1505989364079},{"_id":"public/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1505989364079},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1505989364079},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1505989364079},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1505989364079},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1505989364079},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1505989364079},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1505989364079},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1505989364079},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1505989364079},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1505989364079},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1505989364079},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1505989364079},{"_id":"public/js/src/schemes/pisces.js","hash":"9ccee9189c910b8a264802d7b2ec305d12dedcd0","modified":1505989364079},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1505989364079},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1505989364080},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1505989364080},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1505989364080},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1505989364080},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1505989364080},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1505989364080},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1505989364080},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1505989364080},{"_id":"public/css/main.css","hash":"599b00455201326441935808ed6f92d07841f62b","modified":1505989364080},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1505989364080},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1505989364080},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1505989364080},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1505989364081},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1505989364081},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1505989364081},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1505989364081},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1505989364081},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1505989364081},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1505989364081},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1505989364081},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1505989364090}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2017-09-16T07:05:29.000Z","updated":"2017-09-16T07:05:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7ub6kxe0000m5p15h1qjykw","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n"},{"title":"Version number contrast","date":"2017-09-16T07:14:03.000Z","_content":"```javascript\nfunction toNum(a){\n    var a = a.toString();\n    var c = a.split('.');\n    var num_place = [\"\",\"0\",\"00\",\"000\",\"0000\"], r = num_place.reverse();\n    for (var i = 0; i < c.length; i++){\n        var len = c[i].length;\n        c[i] = r[len] + c[i];\n    }\n    var res = c.join('');\n    return res;\n}\nfunction cpr_version(a,b){\n    var _a = toNum(a), _b = toNum(b);\n    if(_a == _b) return 0;\n    if(_a > _b) return 1;\n    if(_a < _b) return -1;\n}\n//var a = \"2.2.3\", b = \"2.3.0\";\n//转化\n//000200020003  000200030000\n//cpr_version(a,b);\n```","source":"_posts/Version-number-contrast.md","raw":"---\ntitle: Version number contrast\ndate: 2017-09-16 15:14:03\ntags:\n---\n```javascript\nfunction toNum(a){\n    var a = a.toString();\n    var c = a.split('.');\n    var num_place = [\"\",\"0\",\"00\",\"000\",\"0000\"], r = num_place.reverse();\n    for (var i = 0; i < c.length; i++){\n        var len = c[i].length;\n        c[i] = r[len] + c[i];\n    }\n    var res = c.join('');\n    return res;\n}\nfunction cpr_version(a,b){\n    var _a = toNum(a), _b = toNum(b);\n    if(_a == _b) return 0;\n    if(_a > _b) return 1;\n    if(_a < _b) return -1;\n}\n//var a = \"2.2.3\", b = \"2.3.0\";\n//转化\n//000200020003  000200030000\n//cpr_version(a,b);\n```","slug":"Version-number-contrast","published":1,"updated":"2017-09-16T07:14:27.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7ub6kxm0001m5p1t7glupoa","content":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toNum</span>(<span class=\"params\">a</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> a = a.toString();</div><div class=\"line\">    <span class=\"keyword\">var</span> c = a.split(<span class=\"string\">'.'</span>);</div><div class=\"line\">    <span class=\"keyword\">var</span> num_place = [<span class=\"string\">\"\"</span>,<span class=\"string\">\"0\"</span>,<span class=\"string\">\"00\"</span>,<span class=\"string\">\"000\"</span>,<span class=\"string\">\"0000\"</span>], r = num_place.reverse();</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; c.length; i++)&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> len = c[i].length;</div><div class=\"line\">        c[i] = r[len] + c[i];</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">var</span> res = c.join(<span class=\"string\">''</span>);</div><div class=\"line\">    <span class=\"keyword\">return</span> res;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cpr_version</span>(<span class=\"params\">a,b</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> _a = toNum(a), _b = toNum(b);</div><div class=\"line\">    <span class=\"keyword\">if</span>(_a == _b) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span>(_a &gt; _b) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span>(_a &lt; _b) <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//var a = \"2.2.3\", b = \"2.3.0\";</span></div><div class=\"line\"><span class=\"comment\">//转化</span></div><div class=\"line\"><span class=\"comment\">//000200020003  000200030000</span></div><div class=\"line\"><span class=\"comment\">//cpr_version(a,b);</span></div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toNum</span>(<span class=\"params\">a</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> a = a.toString();</div><div class=\"line\">    <span class=\"keyword\">var</span> c = a.split(<span class=\"string\">'.'</span>);</div><div class=\"line\">    <span class=\"keyword\">var</span> num_place = [<span class=\"string\">\"\"</span>,<span class=\"string\">\"0\"</span>,<span class=\"string\">\"00\"</span>,<span class=\"string\">\"000\"</span>,<span class=\"string\">\"0000\"</span>], r = num_place.reverse();</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; c.length; i++)&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> len = c[i].length;</div><div class=\"line\">        c[i] = r[len] + c[i];</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">var</span> res = c.join(<span class=\"string\">''</span>);</div><div class=\"line\">    <span class=\"keyword\">return</span> res;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cpr_version</span>(<span class=\"params\">a,b</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> _a = toNum(a), _b = toNum(b);</div><div class=\"line\">    <span class=\"keyword\">if</span>(_a == _b) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span>(_a &gt; _b) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span>(_a &lt; _b) <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//var a = \"2.2.3\", b = \"2.3.0\";</span></div><div class=\"line\"><span class=\"comment\">//转化</span></div><div class=\"line\"><span class=\"comment\">//000200020003  000200030000</span></div><div class=\"line\"><span class=\"comment\">//cpr_version(a,b);</span></div></pre></td></tr></table></figure>"},{"title":"Element Vs Node","date":"2017-09-18T01:40:33.000Z","_content":"直接看个dmeo:\n```html\n<html>\n  <body>\n    <h1>China</h1>\n    <!-- My comment ...  -->\n    <p>China is a popular country with...</p>\n    <div>\n      <button>See details</button>\n    </div>\n  </body>\n</html>\n```\n![image](http://oifogbmox.bkt.clouddn.com/170918_1.png)\n\n> Node是一个接口，许多DOM类型从这个接口继承， 如： Document, Element, CharacterData(Text, Comment, ..)...\n\nNode 常用属性:\n  - Node.firstChild\n  - Node.lastChild\n  - Node.nodeName // 节点名称\n  - Node.nodeType // 节点的类型 Node.ELEMENT_NODE\n  - Node.nodeValue // 对于文档节点来说, nodeValue返回null. 对于text, comment, 和 CDATA 节点来说, nodeValue返回该节点的文本内容. 对于 attribute 节点来说, 返回该属性的属性值.\n  - ...\n\n\n\n\n[MDN web docs]https://developer.mozilla.org/zh-CN/docs/Web/API/Node","source":"_posts/Element-Vs-Node.md","raw":"---\ntitle: Element Vs Node\ndate: 2017-09-18 09:40:33\ntags:\n---\n直接看个dmeo:\n```html\n<html>\n  <body>\n    <h1>China</h1>\n    <!-- My comment ...  -->\n    <p>China is a popular country with...</p>\n    <div>\n      <button>See details</button>\n    </div>\n  </body>\n</html>\n```\n![image](http://oifogbmox.bkt.clouddn.com/170918_1.png)\n\n> Node是一个接口，许多DOM类型从这个接口继承， 如： Document, Element, CharacterData(Text, Comment, ..)...\n\nNode 常用属性:\n  - Node.firstChild\n  - Node.lastChild\n  - Node.nodeName // 节点名称\n  - Node.nodeType // 节点的类型 Node.ELEMENT_NODE\n  - Node.nodeValue // 对于文档节点来说, nodeValue返回null. 对于text, comment, 和 CDATA 节点来说, nodeValue返回该节点的文本内容. 对于 attribute 节点来说, 返回该属性的属性值.\n  - ...\n\n\n\n\n[MDN web docs]https://developer.mozilla.org/zh-CN/docs/Web/API/Node","slug":"Element-Vs-Node","published":1,"updated":"2017-09-18T02:28:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7ub6kxq0002m5p1vmknav09","content":"<p>直接看个dmeo:<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>China<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!-- My comment ...  --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>China is a popular country with...<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>See details<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p><img src=\"http://oifogbmox.bkt.clouddn.com/170918_1.png\" alt=\"image\"></p>\n<blockquote>\n<p>Node是一个接口，许多DOM类型从这个接口继承， 如： Document, Element, CharacterData(Text, Comment, ..)…</p>\n</blockquote>\n<p>Node 常用属性:</p>\n<ul>\n<li>Node.firstChild</li>\n<li>Node.lastChild</li>\n<li>Node.nodeName // 节点名称</li>\n<li>Node.nodeType // 节点的类型 Node.ELEMENT_NODE</li>\n<li>Node.nodeValue // 对于文档节点来说, nodeValue返回null. 对于text, comment, 和 CDATA 节点来说, nodeValue返回该节点的文本内容. 对于 attribute 节点来说, 返回该属性的属性值.</li>\n<li>…</li>\n</ul>\n<p>[MDN web docs]<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Node\" target=\"_blank\" rel=\"external\">https://developer.mozilla.org/zh-CN/docs/Web/API/Node</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>直接看个dmeo:<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>China<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!-- My comment ...  --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>China is a popular country with...<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>See details<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p><img src=\"http://oifogbmox.bkt.clouddn.com/170918_1.png\" alt=\"image\"></p>\n<blockquote>\n<p>Node是一个接口，许多DOM类型从这个接口继承， 如： Document, Element, CharacterData(Text, Comment, ..)…</p>\n</blockquote>\n<p>Node 常用属性:</p>\n<ul>\n<li>Node.firstChild</li>\n<li>Node.lastChild</li>\n<li>Node.nodeName // 节点名称</li>\n<li>Node.nodeType // 节点的类型 Node.ELEMENT_NODE</li>\n<li>Node.nodeValue // 对于文档节点来说, nodeValue返回null. 对于text, comment, 和 CDATA 节点来说, nodeValue返回该节点的文本内容. 对于 attribute 节点来说, 返回该属性的属性值.</li>\n<li>…</li>\n</ul>\n<p>[MDN web docs]<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Node\" target=\"_blank\" rel=\"external\">https://developer.mozilla.org/zh-CN/docs/Web/API/Node</a></p>\n"},{"title":"md-syntax","date":"2017-09-16T13:38:53.000Z","_content":"\n# 标题1\n## 标题2\n### 标题3\n#### 标题4\n##### 标题5\n\n- 111\n- 222\n- 333\n\n1. 111\n2. 222\n3. 333\n\n---\n\n**加粗**\n\n~~中划线~~\n\n*斜体*\n\n> 提示\n\n![image](http://oifogbmox.bkt.clouddn.com/1.jpg)\n\n`看看`\n\n* 再看看\n","source":"_posts/md-syntax.md","raw":"---\ntitle: md-syntax\ndate: 2017-09-16 21:38:53\ntags:\n---\n\n# 标题1\n## 标题2\n### 标题3\n#### 标题4\n##### 标题5\n\n- 111\n- 222\n- 333\n\n1. 111\n2. 222\n3. 333\n\n---\n\n**加粗**\n\n~~中划线~~\n\n*斜体*\n\n> 提示\n\n![image](http://oifogbmox.bkt.clouddn.com/1.jpg)\n\n`看看`\n\n* 再看看\n","slug":"md-syntax","published":1,"updated":"2017-09-18T08:59:27.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7ub6kxr0003m5p1wqjs1ctj","content":"<h1 id=\"标题1\"><a href=\"#标题1\" class=\"headerlink\" title=\"标题1\"></a>标题1</h1><h2 id=\"标题2\"><a href=\"#标题2\" class=\"headerlink\" title=\"标题2\"></a>标题2</h2><h3 id=\"标题3\"><a href=\"#标题3\" class=\"headerlink\" title=\"标题3\"></a>标题3</h3><h4 id=\"标题4\"><a href=\"#标题4\" class=\"headerlink\" title=\"标题4\"></a>标题4</h4><h5 id=\"标题5\"><a href=\"#标题5\" class=\"headerlink\" title=\"标题5\"></a>标题5</h5><ul>\n<li>111</li>\n<li>222</li>\n<li>333</li>\n</ul>\n<ol>\n<li>111</li>\n<li>222</li>\n<li>333</li>\n</ol>\n<hr>\n<p><strong>加粗</strong></p>\n<p><del>中划线</del></p>\n<p><em>斜体</em></p>\n<blockquote>\n<p>提示</p>\n</blockquote>\n<p><img src=\"http://oifogbmox.bkt.clouddn.com/1.jpg\" alt=\"image\"></p>\n<p><code>看看</code></p>\n<ul>\n<li>再看看</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"标题1\"><a href=\"#标题1\" class=\"headerlink\" title=\"标题1\"></a>标题1</h1><h2 id=\"标题2\"><a href=\"#标题2\" class=\"headerlink\" title=\"标题2\"></a>标题2</h2><h3 id=\"标题3\"><a href=\"#标题3\" class=\"headerlink\" title=\"标题3\"></a>标题3</h3><h4 id=\"标题4\"><a href=\"#标题4\" class=\"headerlink\" title=\"标题4\"></a>标题4</h4><h5 id=\"标题5\"><a href=\"#标题5\" class=\"headerlink\" title=\"标题5\"></a>标题5</h5><ul>\n<li>111</li>\n<li>222</li>\n<li>333</li>\n</ul>\n<ol>\n<li>111</li>\n<li>222</li>\n<li>333</li>\n</ol>\n<hr>\n<p><strong>加粗</strong></p>\n<p><del>中划线</del></p>\n<p><em>斜体</em></p>\n<blockquote>\n<p>提示</p>\n</blockquote>\n<p><img src=\"http://oifogbmox.bkt.clouddn.com/1.jpg\" alt=\"image\"></p>\n<p><code>看看</code></p>\n<ul>\n<li>再看看</li>\n</ul>\n"},{"title":"pvue","date":"2017-09-19T14:32:14.000Z","_content":"[demo](https://github.com/weitongtong/pvue)","source":"_posts/pvue.md","raw":"---\ntitle: pvue\ndate: 2017-09-19 22:32:14\ntags:\n---\n[demo](https://github.com/weitongtong/pvue)","slug":"pvue","published":1,"updated":"2017-09-19T14:34:20.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7ub6kxs0004m5p1n38tmjeb","content":"<p><a href=\"https://github.com/weitongtong/pvue\" target=\"_blank\" rel=\"external\">demo</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://github.com/weitongtong/pvue\" target=\"_blank\" rel=\"external\">demo</a></p>\n"},{"title":"rollup.js","date":"2017-09-16T07:23:22.000Z","_content":"\n# 初探-Rollup.js\n\n## 一、为什么模块化\n\n- 更好的代码组织方式\n- 更好的依赖处理\n- 性能优化\n- ...\n\n## 二、为什么要用Rollup打包工具\n\n先做个简单的测试，我们准备了一个 module.js 文件和 entry.js 文件，分别用 Rollup 和 Webpack 打包。\n[demo地址](https://www.baidu.com)\n\npackage.json 如下：\n![image](http://oifogbmox.bkt.clouddn.com/ro1.png)\n\nmodule.js 如下：\n![image](http://oifogbmox.bkt.clouddn.com/ro2.png)\n\nentry.js 如下：\n![image](http://oifogbmox.bkt.clouddn.com/ro3.png)\n\nrollup.config.js 如下：\n![image](http://oifogbmox.bkt.clouddn.com/ro4.png)\n\nwebpack.config.js 如下\n![image](http://oifogbmox.bkt.clouddn.com/ro5.png)\n\n\n1. 对比打包之后的文件，webpack打包出来的约3k，而rollup的不到1k\n![image](http://oifogbmox.bkt.clouddn.com/ro6.png)\n\n2. Tree Shaking\nRollup是第一个提出Tree Shaking的打包工具。简单来说，Rollup会静态分析你所引入的模块，去掉没有真正用到的部分，只引入你需要的部分，减少体积。\nrollup:\n![image](http://oifogbmox.bkt.clouddn.com/ro7.png)\nwebpack:\n![image](http://oifogbmox.bkt.clouddn.com/ro8.png)\n\n  > Webpack2.0 已经支持 Tree Shaking, 但配置较为复杂 具体见官网\n\n3. Rollup 是基于ES6实现的代码模块化\nRollup 对代码模块完全使用新的标准化格式，这些标准都包含在 JavaScript 的 ES6 版本中，而不是以前的特殊解决方案，如 CommonJS 和 AMD。\n\n  ES6的部分功能\n  - 语法更好\n  - 模块导出（export）的是绑定，而不是值\n    ES6:\n    ![image](http://oifogbmox.bkt.clouddn.com/ro9.png)output: 0 1\n    Commonjs:\n    ![image](http://oifogbmox.bkt.clouddn.com/ro10.png)output: 0 0\n  - 支持循环依赖\n\n## 三、如何使用\n  1. 安装\n    ```bash\n    sudo npm i rollup -g\n    ```\n  2. 使用方法（cli / api / other plugin）\n    Rollup 提供了多种打包方式，通过 format 属性可以设置你想要打包成的代码类型：\n    \n    amd - 输出成AMD模块规则，RequireJS可以用\n    cjs - CommonJS规则，适合Node，Browserify，Webpack 等\n    es - 默认值，不改变代码\n    iife - 输出自执行函数，最适合导入html中的script标签，且代码更小\n    umd - 通用模式，amd, cjs, iife都能用\n\n  3. 使用配置文件\n    ```javascript\n      // rollup.config.js\n      export default {\n        input: 'src/main.js',\n        output: {\n          file: 'bundle.js',\n          format: 'cjs'\n        }\n      }\n    ```\n    ```bash\n      // 默认 rollup.config.js\n      rollup -c\n      // 指定配置文件\n      rollup --config rollup.config.dev.js\n      rollup --config rollup.config.prod.js\n    ```\n  4. 使用插件\n    通常我们需要导入从npm下载的模块(importing modules installed with npm) 比如：通过label编译模块，使用json等。For that, we use plugins, which change the behaviour of Rollup at key points in the bundling process. A list of available plugins is maintained on the Rollup wiki.\n\n    以 **rollup-plugin-json** 为例 它能够使rollup导入json文件里的数据\n    ```bash\n      npm install --save-dev rollup-plugin-json\n    ```\n    > 我们使用--save-dev而不是--save是因为我的代码在运行时不是真正的以来这个插件——只是在我们编译bundle时依赖而已。\n\n    ```javascript\n    // rollup.config.js\n    import json from 'rollup-plugin-json'\n\n    export default {\n      entry: './static/js/entry.js',\n      output: {\n        file: 'rollup_bundle_iife.js',\n        format: 'iife',\n      },\n      plugins: [\n        json()\n      ]\n    }\n    ```\n  5. 结合npm库使用rollup\n    在某种情况下，你的项目需要下载npm的第三方模块到你的node_module文件夹中。跟其他的Webpack Browserfy 不同，Rollup不知道'out of box' 怎么处理这些依赖，我们需要添加一些设置。\n    以 **the-answer** 为例：\n    ```bash\n    npm i the-answer -S\n    ```\n    ```javascript\n    import answer from 'the-answer';\n\n    export default function () {\n      console.log('the answer is ' + answer);\n    }\n    ```\n    编译报警告\n    >(!) Unresolved dependencies\n      https://github.com/rollup/rollup/wiki/Troubleshooting#treating-module-as-external-dependency\n      the-answer (imported by main.js)\n\n    导出来的bundle.js仍然能够在Node.js下运行，因为import声明被转化成CommonJS风格的require语句，但是the-answer没有放到bundle中，因此我们需要一个插件。\n\n    **rollup-plugin-node-resolve 插件**\n\n    ```bash\n      npm install --save-dev rollup-plugin-node-resolve\n    ```\n    ```javascript\n      // rollup.config.js\n      import resolve from 'rollup-plugin-node-resolve';\n\n      export default {\n        input: 'src/main.js',\n        output: {\n          file: 'bundle.js'\n          format: 'cjs'\n        },\n        plugins: [ resolve() ]\n      }\n    ```\n\n    **rollup-plugin-commonjs插件**\n\n    有些库导出的是es6模块，所以你可import——the-answer就是这种。然而npm的大多数第三方库是CommonJS风格的模块。在其发生改变之前，我们需要转换CommonJS为ES2015的模块，然后再用rollup处理。\n    这正是rollup-plugin-commonjs的功能所在。\n\n  6. 同级依赖peer dependencies\n    ```javascript\n    // rollup.config.js\n    import resolve from 'rollup-plugin-node-resolve';\n\n    export default {\n      input: 'src/main.js',\n      output: {\n        file: 'bundle.js',\n        format: 'cjs'\n      },\n      plugins: [resolve({\n        // pass custom options to the resolve plugin（自定义）\n        customResolveOptions: {\n          moduleDirectory: 'node_modules'\n        }\n      })],\n      // indicate which modules should be treated as external (这里把lodash作为同级依赖 不打包进来)\n      external: ['lodash']\n    };\n    ```\n  7. 结合Babel使用rollup\n    很多开发者会在他们的项目中使用Babel，因此他们可以使用一些超前的es6特性，这样能够在浏览器和node环境中使用。\n    同时使用rollup和Babel的最简单的方法是使用rollup-plugin-babel插件。安装：\n```bash\n  npm i -D rollup-plugin-babel\n```\n    rollup.config.js:\n```javascript\n// rollup.config.js\nimport resolve from 'rollup-plugin-node-resolve';\nimport babel from 'rollup-plugin-babel';\n\nexport default {\n  entry: 'src/main.js',\n  format: 'cjs',\n  plugins: [\n    resolve(),\n    babel({\n      exclude: 'node_modules/**' // only transpile our source code\n    })\n  ],\n  dest: 'bundle.js'\n};\n  ```\n    在babel能够真正的编译源码之前，你需要一些设置，创建一个新文件src/.babelrc：\n```\n{\n  \"presets\": [\n    [\"latest\", {\n      \"es2015\": {\n        \"modules\": false\n      }\n    }]\n  ],\n  \"plugins\": [\"external-helpers\"]\n}\n```\n    在这一步有一些东西跟往常不太一样。首先我们设置modules:false，否则Babel将会在rollup转化前转化我们的模块为CommonJS风格，这样就无法实现rollup的目的（tree shaking）。\n\n    其次，我们使用了external-helpers插件，它使rollup在bundle的头部添加一次'helper'，而不是在每个使用模块的地方包含他们（这是默认行为)。\n\n    第三我们把.babelrc放在了src文件夹里，而不是项目的跟目录，如果我们售后需要它，这个允许我们有不同的.babelrc文件对应不同的需求，例如测试。（针对不同的需求设置不同的配置是个好的方法）\n\n    现在，在运行rollup之前，我们需要安装latest预设以及external-helers插件。\n  ```\n    npm i -D babel-preset-latest babel-plugin-external-helpers\n  ```\n    现在运行rollup生成不打了，此时可以使用es2015特性了。首先更新下src/main.js的内容。\n\n  ```javascript\n  import answer from 'the-answer';\n\n  export default () => {\n    console.log(`the answer is ${answer}`);\n  }\n  使用npm run build运行rollup，然后查看bundle。\n\n  'use strict';\n\n  var index = 42;\n\n  var main = (function () {\n    console.log('the answer is ' + index);\n  });\n  ```\n\n## 四、Big list of options\n\n  1. globals -g / --globals\n  use for umd / iife bundles. For example, in a case like this...\n  ``` javascript\n  import Vue from 'vue'\n  ```\n  ...we want to tell Rollup that the vue module ID equates to the global Vue variable:\n  ``` javascript\n  // rollup.config.js\n  export default {\n    ...,\n    format: 'iife',\n    moduleName: 'myBundle',\n    globals: {\n      vue: 'Vue', // vue 模块在 全局中对应的变量名称是'Vue'\n    }\n  }\n  ```\n\n\n\n  [官网](https://rollupjs.org/)\n  [中文文档](https://segmentfault.com/a/1190000009910959#articleHeader7)\n  [参考资料](https://zhuanlan.zhihu.com/p/27832148/)","source":"_posts/rollup-js.md","raw":"---\ntitle: rollup.js\ndate: 2017-09-16 15:23:22\ntags:\n---\n\n# 初探-Rollup.js\n\n## 一、为什么模块化\n\n- 更好的代码组织方式\n- 更好的依赖处理\n- 性能优化\n- ...\n\n## 二、为什么要用Rollup打包工具\n\n先做个简单的测试，我们准备了一个 module.js 文件和 entry.js 文件，分别用 Rollup 和 Webpack 打包。\n[demo地址](https://www.baidu.com)\n\npackage.json 如下：\n![image](http://oifogbmox.bkt.clouddn.com/ro1.png)\n\nmodule.js 如下：\n![image](http://oifogbmox.bkt.clouddn.com/ro2.png)\n\nentry.js 如下：\n![image](http://oifogbmox.bkt.clouddn.com/ro3.png)\n\nrollup.config.js 如下：\n![image](http://oifogbmox.bkt.clouddn.com/ro4.png)\n\nwebpack.config.js 如下\n![image](http://oifogbmox.bkt.clouddn.com/ro5.png)\n\n\n1. 对比打包之后的文件，webpack打包出来的约3k，而rollup的不到1k\n![image](http://oifogbmox.bkt.clouddn.com/ro6.png)\n\n2. Tree Shaking\nRollup是第一个提出Tree Shaking的打包工具。简单来说，Rollup会静态分析你所引入的模块，去掉没有真正用到的部分，只引入你需要的部分，减少体积。\nrollup:\n![image](http://oifogbmox.bkt.clouddn.com/ro7.png)\nwebpack:\n![image](http://oifogbmox.bkt.clouddn.com/ro8.png)\n\n  > Webpack2.0 已经支持 Tree Shaking, 但配置较为复杂 具体见官网\n\n3. Rollup 是基于ES6实现的代码模块化\nRollup 对代码模块完全使用新的标准化格式，这些标准都包含在 JavaScript 的 ES6 版本中，而不是以前的特殊解决方案，如 CommonJS 和 AMD。\n\n  ES6的部分功能\n  - 语法更好\n  - 模块导出（export）的是绑定，而不是值\n    ES6:\n    ![image](http://oifogbmox.bkt.clouddn.com/ro9.png)output: 0 1\n    Commonjs:\n    ![image](http://oifogbmox.bkt.clouddn.com/ro10.png)output: 0 0\n  - 支持循环依赖\n\n## 三、如何使用\n  1. 安装\n    ```bash\n    sudo npm i rollup -g\n    ```\n  2. 使用方法（cli / api / other plugin）\n    Rollup 提供了多种打包方式，通过 format 属性可以设置你想要打包成的代码类型：\n    \n    amd - 输出成AMD模块规则，RequireJS可以用\n    cjs - CommonJS规则，适合Node，Browserify，Webpack 等\n    es - 默认值，不改变代码\n    iife - 输出自执行函数，最适合导入html中的script标签，且代码更小\n    umd - 通用模式，amd, cjs, iife都能用\n\n  3. 使用配置文件\n    ```javascript\n      // rollup.config.js\n      export default {\n        input: 'src/main.js',\n        output: {\n          file: 'bundle.js',\n          format: 'cjs'\n        }\n      }\n    ```\n    ```bash\n      // 默认 rollup.config.js\n      rollup -c\n      // 指定配置文件\n      rollup --config rollup.config.dev.js\n      rollup --config rollup.config.prod.js\n    ```\n  4. 使用插件\n    通常我们需要导入从npm下载的模块(importing modules installed with npm) 比如：通过label编译模块，使用json等。For that, we use plugins, which change the behaviour of Rollup at key points in the bundling process. A list of available plugins is maintained on the Rollup wiki.\n\n    以 **rollup-plugin-json** 为例 它能够使rollup导入json文件里的数据\n    ```bash\n      npm install --save-dev rollup-plugin-json\n    ```\n    > 我们使用--save-dev而不是--save是因为我的代码在运行时不是真正的以来这个插件——只是在我们编译bundle时依赖而已。\n\n    ```javascript\n    // rollup.config.js\n    import json from 'rollup-plugin-json'\n\n    export default {\n      entry: './static/js/entry.js',\n      output: {\n        file: 'rollup_bundle_iife.js',\n        format: 'iife',\n      },\n      plugins: [\n        json()\n      ]\n    }\n    ```\n  5. 结合npm库使用rollup\n    在某种情况下，你的项目需要下载npm的第三方模块到你的node_module文件夹中。跟其他的Webpack Browserfy 不同，Rollup不知道'out of box' 怎么处理这些依赖，我们需要添加一些设置。\n    以 **the-answer** 为例：\n    ```bash\n    npm i the-answer -S\n    ```\n    ```javascript\n    import answer from 'the-answer';\n\n    export default function () {\n      console.log('the answer is ' + answer);\n    }\n    ```\n    编译报警告\n    >(!) Unresolved dependencies\n      https://github.com/rollup/rollup/wiki/Troubleshooting#treating-module-as-external-dependency\n      the-answer (imported by main.js)\n\n    导出来的bundle.js仍然能够在Node.js下运行，因为import声明被转化成CommonJS风格的require语句，但是the-answer没有放到bundle中，因此我们需要一个插件。\n\n    **rollup-plugin-node-resolve 插件**\n\n    ```bash\n      npm install --save-dev rollup-plugin-node-resolve\n    ```\n    ```javascript\n      // rollup.config.js\n      import resolve from 'rollup-plugin-node-resolve';\n\n      export default {\n        input: 'src/main.js',\n        output: {\n          file: 'bundle.js'\n          format: 'cjs'\n        },\n        plugins: [ resolve() ]\n      }\n    ```\n\n    **rollup-plugin-commonjs插件**\n\n    有些库导出的是es6模块，所以你可import——the-answer就是这种。然而npm的大多数第三方库是CommonJS风格的模块。在其发生改变之前，我们需要转换CommonJS为ES2015的模块，然后再用rollup处理。\n    这正是rollup-plugin-commonjs的功能所在。\n\n  6. 同级依赖peer dependencies\n    ```javascript\n    // rollup.config.js\n    import resolve from 'rollup-plugin-node-resolve';\n\n    export default {\n      input: 'src/main.js',\n      output: {\n        file: 'bundle.js',\n        format: 'cjs'\n      },\n      plugins: [resolve({\n        // pass custom options to the resolve plugin（自定义）\n        customResolveOptions: {\n          moduleDirectory: 'node_modules'\n        }\n      })],\n      // indicate which modules should be treated as external (这里把lodash作为同级依赖 不打包进来)\n      external: ['lodash']\n    };\n    ```\n  7. 结合Babel使用rollup\n    很多开发者会在他们的项目中使用Babel，因此他们可以使用一些超前的es6特性，这样能够在浏览器和node环境中使用。\n    同时使用rollup和Babel的最简单的方法是使用rollup-plugin-babel插件。安装：\n```bash\n  npm i -D rollup-plugin-babel\n```\n    rollup.config.js:\n```javascript\n// rollup.config.js\nimport resolve from 'rollup-plugin-node-resolve';\nimport babel from 'rollup-plugin-babel';\n\nexport default {\n  entry: 'src/main.js',\n  format: 'cjs',\n  plugins: [\n    resolve(),\n    babel({\n      exclude: 'node_modules/**' // only transpile our source code\n    })\n  ],\n  dest: 'bundle.js'\n};\n  ```\n    在babel能够真正的编译源码之前，你需要一些设置，创建一个新文件src/.babelrc：\n```\n{\n  \"presets\": [\n    [\"latest\", {\n      \"es2015\": {\n        \"modules\": false\n      }\n    }]\n  ],\n  \"plugins\": [\"external-helpers\"]\n}\n```\n    在这一步有一些东西跟往常不太一样。首先我们设置modules:false，否则Babel将会在rollup转化前转化我们的模块为CommonJS风格，这样就无法实现rollup的目的（tree shaking）。\n\n    其次，我们使用了external-helpers插件，它使rollup在bundle的头部添加一次'helper'，而不是在每个使用模块的地方包含他们（这是默认行为)。\n\n    第三我们把.babelrc放在了src文件夹里，而不是项目的跟目录，如果我们售后需要它，这个允许我们有不同的.babelrc文件对应不同的需求，例如测试。（针对不同的需求设置不同的配置是个好的方法）\n\n    现在，在运行rollup之前，我们需要安装latest预设以及external-helers插件。\n  ```\n    npm i -D babel-preset-latest babel-plugin-external-helpers\n  ```\n    现在运行rollup生成不打了，此时可以使用es2015特性了。首先更新下src/main.js的内容。\n\n  ```javascript\n  import answer from 'the-answer';\n\n  export default () => {\n    console.log(`the answer is ${answer}`);\n  }\n  使用npm run build运行rollup，然后查看bundle。\n\n  'use strict';\n\n  var index = 42;\n\n  var main = (function () {\n    console.log('the answer is ' + index);\n  });\n  ```\n\n## 四、Big list of options\n\n  1. globals -g / --globals\n  use for umd / iife bundles. For example, in a case like this...\n  ``` javascript\n  import Vue from 'vue'\n  ```\n  ...we want to tell Rollup that the vue module ID equates to the global Vue variable:\n  ``` javascript\n  // rollup.config.js\n  export default {\n    ...,\n    format: 'iife',\n    moduleName: 'myBundle',\n    globals: {\n      vue: 'Vue', // vue 模块在 全局中对应的变量名称是'Vue'\n    }\n  }\n  ```\n\n\n\n  [官网](https://rollupjs.org/)\n  [中文文档](https://segmentfault.com/a/1190000009910959#articleHeader7)\n  [参考资料](https://zhuanlan.zhihu.com/p/27832148/)","slug":"rollup-js","published":1,"updated":"2017-09-18T06:25:27.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7ub6kxt0005m5p1kb2hvdzd","content":"<h1 id=\"初探-Rollup-js\"><a href=\"#初探-Rollup-js\" class=\"headerlink\" title=\"初探-Rollup.js\"></a>初探-Rollup.js</h1><h2 id=\"一、为什么模块化\"><a href=\"#一、为什么模块化\" class=\"headerlink\" title=\"一、为什么模块化\"></a>一、为什么模块化</h2><ul>\n<li>更好的代码组织方式</li>\n<li>更好的依赖处理</li>\n<li>性能优化</li>\n<li>…</li>\n</ul>\n<h2 id=\"二、为什么要用Rollup打包工具\"><a href=\"#二、为什么要用Rollup打包工具\" class=\"headerlink\" title=\"二、为什么要用Rollup打包工具\"></a>二、为什么要用Rollup打包工具</h2><p>先做个简单的测试，我们准备了一个 module.js 文件和 entry.js 文件，分别用 Rollup 和 Webpack 打包。<br><a href=\"https://www.baidu.com\" target=\"_blank\" rel=\"external\">demo地址</a></p>\n<p>package.json 如下：<br><img src=\"http://oifogbmox.bkt.clouddn.com/ro1.png\" alt=\"image\"></p>\n<p>module.js 如下：<br><img src=\"http://oifogbmox.bkt.clouddn.com/ro2.png\" alt=\"image\"></p>\n<p>entry.js 如下：<br><img src=\"http://oifogbmox.bkt.clouddn.com/ro3.png\" alt=\"image\"></p>\n<p>rollup.config.js 如下：<br><img src=\"http://oifogbmox.bkt.clouddn.com/ro4.png\" alt=\"image\"></p>\n<p>webpack.config.js 如下<br><img src=\"http://oifogbmox.bkt.clouddn.com/ro5.png\" alt=\"image\"></p>\n<ol>\n<li><p>对比打包之后的文件，webpack打包出来的约3k，而rollup的不到1k<br><img src=\"http://oifogbmox.bkt.clouddn.com/ro6.png\" alt=\"image\"></p>\n</li>\n<li><p>Tree Shaking<br>Rollup是第一个提出Tree Shaking的打包工具。简单来说，Rollup会静态分析你所引入的模块，去掉没有真正用到的部分，只引入你需要的部分，减少体积。<br>rollup:<br><img src=\"http://oifogbmox.bkt.clouddn.com/ro7.png\" alt=\"image\"><br>webpack:<br><img src=\"http://oifogbmox.bkt.clouddn.com/ro8.png\" alt=\"image\"></p>\n<blockquote>\n<p>Webpack2.0 已经支持 Tree Shaking, 但配置较为复杂 具体见官网</p>\n</blockquote>\n</li>\n<li><p>Rollup 是基于ES6实现的代码模块化<br>Rollup 对代码模块完全使用新的标准化格式，这些标准都包含在 JavaScript 的 ES6 版本中，而不是以前的特殊解决方案，如 CommonJS 和 AMD。</p>\n<p>ES6的部分功能</p>\n<ul>\n<li>语法更好</li>\n<li>模块导出（export）的是绑定，而不是值<br>ES6:<br><img src=\"http://oifogbmox.bkt.clouddn.com/ro9.png\" alt=\"image\">output: 0 1<br>Commonjs:<br><img src=\"http://oifogbmox.bkt.clouddn.com/ro10.png\" alt=\"image\">output: 0 0</li>\n<li>支持循环依赖</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"三、如何使用\"><a href=\"#三、如何使用\" class=\"headerlink\" title=\"三、如何使用\"></a>三、如何使用</h2><ol>\n<li><p>安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo npm i rollup -g</div></pre></td></tr></table></figure>\n</li>\n<li><p>使用方法（cli / api / other plugin）<br>Rollup 提供了多种打包方式，通过 format 属性可以设置你想要打包成的代码类型：</p>\n<p>amd - 输出成AMD模块规则，RequireJS可以用<br>cjs - CommonJS规则，适合Node，Browserify，Webpack 等<br>es - 默认值，不改变代码<br>iife - 输出自执行函数，最适合导入html中的script标签，且代码更小<br>umd - 通用模式，amd, cjs, iife都能用</p>\n</li>\n<li><p>使用配置文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// rollup.config.js</span></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  input: <span class=\"string\">'src/main.js'</span>,</div><div class=\"line\">  output: &#123;</div><div class=\"line\">    file: <span class=\"string\">'bundle.js'</span>,</div><div class=\"line\">    format: <span class=\"string\">'cjs'</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 默认 rollup.config.js</div><div class=\"line\">rollup -c</div><div class=\"line\">// 指定配置文件</div><div class=\"line\">rollup --config rollup.config.dev.js</div><div class=\"line\">rollup --config rollup.config.prod.js</div></pre></td></tr></table></figure>\n</li>\n<li><p>使用插件<br>通常我们需要导入从npm下载的模块(importing modules installed with npm) 比如：通过label编译模块，使用json等。For that, we use plugins, which change the behaviour of Rollup at key points in the bundling process. A list of available plugins is maintained on the Rollup wiki.</p>\n<p>以 <strong>rollup-plugin-json</strong> 为例 它能够使rollup导入json文件里的数据</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install --save-dev rollup-plugin-json</div></pre></td></tr></table></figure>\n<blockquote>\n<p>我们使用–save-dev而不是–save是因为我的代码在运行时不是真正的以来这个插件——只是在我们编译bundle时依赖而已。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// rollup.config.js</span></div><div class=\"line\"><span class=\"keyword\">import</span> json <span class=\"keyword\">from</span> <span class=\"string\">'rollup-plugin-json'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  entry: <span class=\"string\">'./static/js/entry.js'</span>,</div><div class=\"line\">  output: &#123;</div><div class=\"line\">    file: <span class=\"string\">'rollup_bundle_iife.js'</span>,</div><div class=\"line\">    format: <span class=\"string\">'iife'</span>,</div><div class=\"line\">  &#125;,</div><div class=\"line\">  plugins: [</div><div class=\"line\">    json()</div><div class=\"line\">  ]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>结合npm库使用rollup<br>在某种情况下，你的项目需要下载npm的第三方模块到你的node_module文件夹中。跟其他的Webpack Browserfy 不同，Rollup不知道’out of box’ 怎么处理这些依赖，我们需要添加一些设置。<br>以 <strong>the-answer</strong> 为例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm i the-answer -S</div></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> answer <span class=\"keyword\">from</span> <span class=\"string\">'the-answer'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'the answer is '</span> + answer);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>编译报警告</p>\n<blockquote>\n<p>(!) Unresolved dependencies<br> <a href=\"https://github.com/rollup/rollup/wiki/Troubleshooting#treating-module-as-external-dependency\" target=\"_blank\" rel=\"external\">https://github.com/rollup/rollup/wiki/Troubleshooting#treating-module-as-external-dependency</a><br> the-answer (imported by main.js)</p>\n</blockquote>\n<p>导出来的bundle.js仍然能够在Node.js下运行，因为import声明被转化成CommonJS风格的require语句，但是the-answer没有放到bundle中，因此我们需要一个插件。</p>\n<p><strong>rollup-plugin-node-resolve 插件</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install --save-dev rollup-plugin-node-resolve</div></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// rollup.config.js</span></div><div class=\"line\"><span class=\"keyword\">import</span> resolve <span class=\"keyword\">from</span> <span class=\"string\">'rollup-plugin-node-resolve'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  input: <span class=\"string\">'src/main.js'</span>,</div><div class=\"line\">  output: &#123;</div><div class=\"line\">    file: <span class=\"string\">'bundle.js'</span></div><div class=\"line\">    format: <span class=\"string\">'cjs'</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  plugins: [ resolve() ]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong>rollup-plugin-commonjs插件</strong></p>\n<p>有些库导出的是es6模块，所以你可import——the-answer就是这种。然而npm的大多数第三方库是CommonJS风格的模块。在其发生改变之前，我们需要转换CommonJS为ES2015的模块，然后再用rollup处理。<br>这正是rollup-plugin-commonjs的功能所在。</p>\n</li>\n<li><p>同级依赖peer dependencies</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// rollup.config.js</span></div><div class=\"line\"><span class=\"keyword\">import</span> resolve <span class=\"keyword\">from</span> <span class=\"string\">'rollup-plugin-node-resolve'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  input: <span class=\"string\">'src/main.js'</span>,</div><div class=\"line\">  output: &#123;</div><div class=\"line\">    file: <span class=\"string\">'bundle.js'</span>,</div><div class=\"line\">    format: <span class=\"string\">'cjs'</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  plugins: [resolve(&#123;</div><div class=\"line\">    <span class=\"comment\">// pass custom options to the resolve plugin（自定义）</span></div><div class=\"line\">    customResolveOptions: &#123;</div><div class=\"line\">      moduleDirectory: <span class=\"string\">'node_modules'</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;)],</div><div class=\"line\">  <span class=\"comment\">// indicate which modules should be treated as external (这里把lodash作为同级依赖 不打包进来)</span></div><div class=\"line\">  external: [<span class=\"string\">'lodash'</span>]</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n</li>\n<li><p>结合Babel使用rollup<br>很多开发者会在他们的项目中使用Babel，因此他们可以使用一些超前的es6特性，这样能够在浏览器和node环境中使用。<br>同时使用rollup和Babel的最简单的方法是使用rollup-plugin-babel插件。安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm i -D rollup-plugin-babel</div></pre></td></tr></table></figure>\n<p>rollup.config.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// rollup.config.js</span></div><div class=\"line\"><span class=\"keyword\">import</span> resolve <span class=\"keyword\">from</span> <span class=\"string\">'rollup-plugin-node-resolve'</span>;</div><div class=\"line\"><span class=\"keyword\">import</span> babel <span class=\"keyword\">from</span> <span class=\"string\">'rollup-plugin-babel'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  entry: <span class=\"string\">'src/main.js'</span>,</div><div class=\"line\">  format: <span class=\"string\">'cjs'</span>,</div><div class=\"line\">  plugins: [</div><div class=\"line\">    resolve(),</div><div class=\"line\">    babel(&#123;</div><div class=\"line\">      exclude: <span class=\"string\">'node_modules/**'</span> <span class=\"comment\">// only transpile our source code</span></div><div class=\"line\">    &#125;)</div><div class=\"line\">  ],</div><div class=\"line\">  dest: <span class=\"string\">'bundle.js'</span></div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<p>在babel能够真正的编译源码之前，你需要一些设置，创建一个新文件src/.babelrc：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  &quot;presets&quot;: [</div><div class=\"line\">    [&quot;latest&quot;, &#123;</div><div class=\"line\">      &quot;es2015&quot;: &#123;</div><div class=\"line\">        &quot;modules&quot;: false</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;]</div><div class=\"line\">  ],</div><div class=\"line\">  &quot;plugins&quot;: [&quot;external-helpers&quot;]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在这一步有一些东西跟往常不太一样。首先我们设置modules:false，否则Babel将会在rollup转化前转化我们的模块为CommonJS风格，这样就无法实现rollup的目的（tree shaking）。</p>\n<p>其次，我们使用了external-helpers插件，它使rollup在bundle的头部添加一次’helper’，而不是在每个使用模块的地方包含他们（这是默认行为)。</p>\n<p>第三我们把.babelrc放在了src文件夹里，而不是项目的跟目录，如果我们售后需要它，这个允许我们有不同的.babelrc文件对应不同的需求，例如测试。（针对不同的需求设置不同的配置是个好的方法）</p>\n<p>现在，在运行rollup之前，我们需要安装latest预设以及external-helers插件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm i -D babel-preset-latest babel-plugin-external-helpers</div></pre></td></tr></table></figure>\n<p>现在运行rollup生成不打了，此时可以使用es2015特性了。首先更新下src/main.js的内容。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> answer <span class=\"keyword\">from</span> <span class=\"string\">'the-answer'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> () =&gt; &#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">`the answer is <span class=\"subst\">$&#123;answer&#125;</span>`</span>);</div><div class=\"line\">&#125;</div><div class=\"line\">使用npm run build运行rollup，然后查看bundle。</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">'use strict'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> index = <span class=\"number\">42</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> main = (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'the answer is '</span> + index);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"四、Big-list-of-options\"><a href=\"#四、Big-list-of-options\" class=\"headerlink\" title=\"四、Big list of options\"></a>四、Big list of options</h2><ol>\n<li><p>globals -g / –globals<br>use for umd / iife bundles. For example, in a case like this…</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div></pre></td></tr></table></figure>\n<p>…we want to tell Rollup that the vue module ID equates to the global Vue variable:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// rollup.config.js</span></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  ...,</div><div class=\"line\">  format: <span class=\"string\">'iife'</span>,</div><div class=\"line\">  moduleName: <span class=\"string\">'myBundle'</span>,</div><div class=\"line\">  globals: &#123;</div><div class=\"line\">    vue: <span class=\"string\">'Vue'</span>, <span class=\"comment\">// vue 模块在 全局中对应的变量名称是'Vue'</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a href=\"https://rollupjs.org/\" target=\"_blank\" rel=\"external\">官网</a><br><a href=\"https://segmentfault.com/a/1190000009910959#articleHeader7\" target=\"_blank\" rel=\"external\">中文文档</a><br><a href=\"https://zhuanlan.zhihu.com/p/27832148/\" target=\"_blank\" rel=\"external\">参考资料</a></p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"初探-Rollup-js\"><a href=\"#初探-Rollup-js\" class=\"headerlink\" title=\"初探-Rollup.js\"></a>初探-Rollup.js</h1><h2 id=\"一、为什么模块化\"><a href=\"#一、为什么模块化\" class=\"headerlink\" title=\"一、为什么模块化\"></a>一、为什么模块化</h2><ul>\n<li>更好的代码组织方式</li>\n<li>更好的依赖处理</li>\n<li>性能优化</li>\n<li>…</li>\n</ul>\n<h2 id=\"二、为什么要用Rollup打包工具\"><a href=\"#二、为什么要用Rollup打包工具\" class=\"headerlink\" title=\"二、为什么要用Rollup打包工具\"></a>二、为什么要用Rollup打包工具</h2><p>先做个简单的测试，我们准备了一个 module.js 文件和 entry.js 文件，分别用 Rollup 和 Webpack 打包。<br><a href=\"https://www.baidu.com\" target=\"_blank\" rel=\"external\">demo地址</a></p>\n<p>package.json 如下：<br><img src=\"http://oifogbmox.bkt.clouddn.com/ro1.png\" alt=\"image\"></p>\n<p>module.js 如下：<br><img src=\"http://oifogbmox.bkt.clouddn.com/ro2.png\" alt=\"image\"></p>\n<p>entry.js 如下：<br><img src=\"http://oifogbmox.bkt.clouddn.com/ro3.png\" alt=\"image\"></p>\n<p>rollup.config.js 如下：<br><img src=\"http://oifogbmox.bkt.clouddn.com/ro4.png\" alt=\"image\"></p>\n<p>webpack.config.js 如下<br><img src=\"http://oifogbmox.bkt.clouddn.com/ro5.png\" alt=\"image\"></p>\n<ol>\n<li><p>对比打包之后的文件，webpack打包出来的约3k，而rollup的不到1k<br><img src=\"http://oifogbmox.bkt.clouddn.com/ro6.png\" alt=\"image\"></p>\n</li>\n<li><p>Tree Shaking<br>Rollup是第一个提出Tree Shaking的打包工具。简单来说，Rollup会静态分析你所引入的模块，去掉没有真正用到的部分，只引入你需要的部分，减少体积。<br>rollup:<br><img src=\"http://oifogbmox.bkt.clouddn.com/ro7.png\" alt=\"image\"><br>webpack:<br><img src=\"http://oifogbmox.bkt.clouddn.com/ro8.png\" alt=\"image\"></p>\n<blockquote>\n<p>Webpack2.0 已经支持 Tree Shaking, 但配置较为复杂 具体见官网</p>\n</blockquote>\n</li>\n<li><p>Rollup 是基于ES6实现的代码模块化<br>Rollup 对代码模块完全使用新的标准化格式，这些标准都包含在 JavaScript 的 ES6 版本中，而不是以前的特殊解决方案，如 CommonJS 和 AMD。</p>\n<p>ES6的部分功能</p>\n<ul>\n<li>语法更好</li>\n<li>模块导出（export）的是绑定，而不是值<br>ES6:<br><img src=\"http://oifogbmox.bkt.clouddn.com/ro9.png\" alt=\"image\">output: 0 1<br>Commonjs:<br><img src=\"http://oifogbmox.bkt.clouddn.com/ro10.png\" alt=\"image\">output: 0 0</li>\n<li>支持循环依赖</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"三、如何使用\"><a href=\"#三、如何使用\" class=\"headerlink\" title=\"三、如何使用\"></a>三、如何使用</h2><ol>\n<li><p>安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo npm i rollup -g</div></pre></td></tr></table></figure>\n</li>\n<li><p>使用方法（cli / api / other plugin）<br>Rollup 提供了多种打包方式，通过 format 属性可以设置你想要打包成的代码类型：</p>\n<p>amd - 输出成AMD模块规则，RequireJS可以用<br>cjs - CommonJS规则，适合Node，Browserify，Webpack 等<br>es - 默认值，不改变代码<br>iife - 输出自执行函数，最适合导入html中的script标签，且代码更小<br>umd - 通用模式，amd, cjs, iife都能用</p>\n</li>\n<li><p>使用配置文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// rollup.config.js</span></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  input: <span class=\"string\">'src/main.js'</span>,</div><div class=\"line\">  output: &#123;</div><div class=\"line\">    file: <span class=\"string\">'bundle.js'</span>,</div><div class=\"line\">    format: <span class=\"string\">'cjs'</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 默认 rollup.config.js</div><div class=\"line\">rollup -c</div><div class=\"line\">// 指定配置文件</div><div class=\"line\">rollup --config rollup.config.dev.js</div><div class=\"line\">rollup --config rollup.config.prod.js</div></pre></td></tr></table></figure>\n</li>\n<li><p>使用插件<br>通常我们需要导入从npm下载的模块(importing modules installed with npm) 比如：通过label编译模块，使用json等。For that, we use plugins, which change the behaviour of Rollup at key points in the bundling process. A list of available plugins is maintained on the Rollup wiki.</p>\n<p>以 <strong>rollup-plugin-json</strong> 为例 它能够使rollup导入json文件里的数据</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install --save-dev rollup-plugin-json</div></pre></td></tr></table></figure>\n<blockquote>\n<p>我们使用–save-dev而不是–save是因为我的代码在运行时不是真正的以来这个插件——只是在我们编译bundle时依赖而已。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// rollup.config.js</span></div><div class=\"line\"><span class=\"keyword\">import</span> json <span class=\"keyword\">from</span> <span class=\"string\">'rollup-plugin-json'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  entry: <span class=\"string\">'./static/js/entry.js'</span>,</div><div class=\"line\">  output: &#123;</div><div class=\"line\">    file: <span class=\"string\">'rollup_bundle_iife.js'</span>,</div><div class=\"line\">    format: <span class=\"string\">'iife'</span>,</div><div class=\"line\">  &#125;,</div><div class=\"line\">  plugins: [</div><div class=\"line\">    json()</div><div class=\"line\">  ]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>结合npm库使用rollup<br>在某种情况下，你的项目需要下载npm的第三方模块到你的node_module文件夹中。跟其他的Webpack Browserfy 不同，Rollup不知道’out of box’ 怎么处理这些依赖，我们需要添加一些设置。<br>以 <strong>the-answer</strong> 为例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm i the-answer -S</div></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> answer <span class=\"keyword\">from</span> <span class=\"string\">'the-answer'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'the answer is '</span> + answer);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>编译报警告</p>\n<blockquote>\n<p>(!) Unresolved dependencies<br> <a href=\"https://github.com/rollup/rollup/wiki/Troubleshooting#treating-module-as-external-dependency\" target=\"_blank\" rel=\"external\">https://github.com/rollup/rollup/wiki/Troubleshooting#treating-module-as-external-dependency</a><br> the-answer (imported by main.js)</p>\n</blockquote>\n<p>导出来的bundle.js仍然能够在Node.js下运行，因为import声明被转化成CommonJS风格的require语句，但是the-answer没有放到bundle中，因此我们需要一个插件。</p>\n<p><strong>rollup-plugin-node-resolve 插件</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install --save-dev rollup-plugin-node-resolve</div></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// rollup.config.js</span></div><div class=\"line\"><span class=\"keyword\">import</span> resolve <span class=\"keyword\">from</span> <span class=\"string\">'rollup-plugin-node-resolve'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  input: <span class=\"string\">'src/main.js'</span>,</div><div class=\"line\">  output: &#123;</div><div class=\"line\">    file: <span class=\"string\">'bundle.js'</span></div><div class=\"line\">    format: <span class=\"string\">'cjs'</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  plugins: [ resolve() ]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong>rollup-plugin-commonjs插件</strong></p>\n<p>有些库导出的是es6模块，所以你可import——the-answer就是这种。然而npm的大多数第三方库是CommonJS风格的模块。在其发生改变之前，我们需要转换CommonJS为ES2015的模块，然后再用rollup处理。<br>这正是rollup-plugin-commonjs的功能所在。</p>\n</li>\n<li><p>同级依赖peer dependencies</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// rollup.config.js</span></div><div class=\"line\"><span class=\"keyword\">import</span> resolve <span class=\"keyword\">from</span> <span class=\"string\">'rollup-plugin-node-resolve'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  input: <span class=\"string\">'src/main.js'</span>,</div><div class=\"line\">  output: &#123;</div><div class=\"line\">    file: <span class=\"string\">'bundle.js'</span>,</div><div class=\"line\">    format: <span class=\"string\">'cjs'</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  plugins: [resolve(&#123;</div><div class=\"line\">    <span class=\"comment\">// pass custom options to the resolve plugin（自定义）</span></div><div class=\"line\">    customResolveOptions: &#123;</div><div class=\"line\">      moduleDirectory: <span class=\"string\">'node_modules'</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;)],</div><div class=\"line\">  <span class=\"comment\">// indicate which modules should be treated as external (这里把lodash作为同级依赖 不打包进来)</span></div><div class=\"line\">  external: [<span class=\"string\">'lodash'</span>]</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n</li>\n<li><p>结合Babel使用rollup<br>很多开发者会在他们的项目中使用Babel，因此他们可以使用一些超前的es6特性，这样能够在浏览器和node环境中使用。<br>同时使用rollup和Babel的最简单的方法是使用rollup-plugin-babel插件。安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm i -D rollup-plugin-babel</div></pre></td></tr></table></figure>\n<p>rollup.config.js:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// rollup.config.js</span></div><div class=\"line\"><span class=\"keyword\">import</span> resolve <span class=\"keyword\">from</span> <span class=\"string\">'rollup-plugin-node-resolve'</span>;</div><div class=\"line\"><span class=\"keyword\">import</span> babel <span class=\"keyword\">from</span> <span class=\"string\">'rollup-plugin-babel'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  entry: <span class=\"string\">'src/main.js'</span>,</div><div class=\"line\">  format: <span class=\"string\">'cjs'</span>,</div><div class=\"line\">  plugins: [</div><div class=\"line\">    resolve(),</div><div class=\"line\">    babel(&#123;</div><div class=\"line\">      exclude: <span class=\"string\">'node_modules/**'</span> <span class=\"comment\">// only transpile our source code</span></div><div class=\"line\">    &#125;)</div><div class=\"line\">  ],</div><div class=\"line\">  dest: <span class=\"string\">'bundle.js'</span></div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<p>在babel能够真正的编译源码之前，你需要一些设置，创建一个新文件src/.babelrc：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  &quot;presets&quot;: [</div><div class=\"line\">    [&quot;latest&quot;, &#123;</div><div class=\"line\">      &quot;es2015&quot;: &#123;</div><div class=\"line\">        &quot;modules&quot;: false</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;]</div><div class=\"line\">  ],</div><div class=\"line\">  &quot;plugins&quot;: [&quot;external-helpers&quot;]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在这一步有一些东西跟往常不太一样。首先我们设置modules:false，否则Babel将会在rollup转化前转化我们的模块为CommonJS风格，这样就无法实现rollup的目的（tree shaking）。</p>\n<p>其次，我们使用了external-helpers插件，它使rollup在bundle的头部添加一次’helper’，而不是在每个使用模块的地方包含他们（这是默认行为)。</p>\n<p>第三我们把.babelrc放在了src文件夹里，而不是项目的跟目录，如果我们售后需要它，这个允许我们有不同的.babelrc文件对应不同的需求，例如测试。（针对不同的需求设置不同的配置是个好的方法）</p>\n<p>现在，在运行rollup之前，我们需要安装latest预设以及external-helers插件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm i -D babel-preset-latest babel-plugin-external-helpers</div></pre></td></tr></table></figure>\n<p>现在运行rollup生成不打了，此时可以使用es2015特性了。首先更新下src/main.js的内容。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> answer <span class=\"keyword\">from</span> <span class=\"string\">'the-answer'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> () =&gt; &#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">`the answer is <span class=\"subst\">$&#123;answer&#125;</span>`</span>);</div><div class=\"line\">&#125;</div><div class=\"line\">使用npm run build运行rollup，然后查看bundle。</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">'use strict'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> index = <span class=\"number\">42</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> main = (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'the answer is '</span> + index);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"四、Big-list-of-options\"><a href=\"#四、Big-list-of-options\" class=\"headerlink\" title=\"四、Big list of options\"></a>四、Big list of options</h2><ol>\n<li><p>globals -g / –globals<br>use for umd / iife bundles. For example, in a case like this…</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div></pre></td></tr></table></figure>\n<p>…we want to tell Rollup that the vue module ID equates to the global Vue variable:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// rollup.config.js</span></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  ...,</div><div class=\"line\">  format: <span class=\"string\">'iife'</span>,</div><div class=\"line\">  moduleName: <span class=\"string\">'myBundle'</span>,</div><div class=\"line\">  globals: &#123;</div><div class=\"line\">    vue: <span class=\"string\">'Vue'</span>, <span class=\"comment\">// vue 模块在 全局中对应的变量名称是'Vue'</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a href=\"https://rollupjs.org/\" target=\"_blank\" rel=\"external\">官网</a><br><a href=\"https://segmentfault.com/a/1190000009910959#articleHeader7\" target=\"_blank\" rel=\"external\">中文文档</a><br><a href=\"https://zhuanlan.zhihu.com/p/27832148/\" target=\"_blank\" rel=\"external\">参考资料</a></p>\n</li>\n</ol>\n"},{"title":"something","date":"2017-09-18T02:35:55.000Z","_content":"<style>\n  .boxbox{\n    border: 2px dashed #ddd;\n    padding: 0 20px;\n    margin-bottom: 20px;\n  }\n</style>\n\n<div class=\"boxbox\">\nDOM文档加载的步骤为：\n1. 解析HTML结构。\n2. 加载外部脚本和样式表文件。\n3. 解析并执行脚本代码。\n4. DOM树构建完成。// DOMContentLoaded\n5. 加载图片等外部文件。\n6. 页面加载完毕。// load\n\n```javascript\ndocument.addEventListener('DOMContentLoaded', function() {\n  // something...\n}, false)\nwindow.addEventListener(\"load\", function() {\n  // something...\n}, false);\n```\n</div>\n\n<div class=\"boxbox\">\ninnerHTML: 从对象的起始位置到终止位置的全部内容,不包括Html标签。\nouterHTML: 除了包含innerHTML的全部内容外, 还包含对象标签本身。\ndemo: \n``` javascript\n<div id=\"test\"> \n   <span style=\"color:red\">test1</span> test2 \n</div>\n// innerHTML: \"<span style=\"color:red\">test1</span> test2 \"\n// outerHTML: \"<div id=\"test\"><span style=\"color:red\">test1</span> test2 </div>\"\n```\n</div>\n\n<div class=\"boxbox\">\n  [学习资料](http://caibaojian.com/book/)\n</div>\n","source":"_posts/something.md","raw":"---\ntitle: something\ndate: 2017-09-18 10:35:55\ntags:\n---\n<style>\n  .boxbox{\n    border: 2px dashed #ddd;\n    padding: 0 20px;\n    margin-bottom: 20px;\n  }\n</style>\n\n<div class=\"boxbox\">\nDOM文档加载的步骤为：\n1. 解析HTML结构。\n2. 加载外部脚本和样式表文件。\n3. 解析并执行脚本代码。\n4. DOM树构建完成。// DOMContentLoaded\n5. 加载图片等外部文件。\n6. 页面加载完毕。// load\n\n```javascript\ndocument.addEventListener('DOMContentLoaded', function() {\n  // something...\n}, false)\nwindow.addEventListener(\"load\", function() {\n  // something...\n}, false);\n```\n</div>\n\n<div class=\"boxbox\">\ninnerHTML: 从对象的起始位置到终止位置的全部内容,不包括Html标签。\nouterHTML: 除了包含innerHTML的全部内容外, 还包含对象标签本身。\ndemo: \n``` javascript\n<div id=\"test\"> \n   <span style=\"color:red\">test1</span> test2 \n</div>\n// innerHTML: \"<span style=\"color:red\">test1</span> test2 \"\n// outerHTML: \"<div id=\"test\"><span style=\"color:red\">test1</span> test2 </div>\"\n```\n</div>\n\n<div class=\"boxbox\">\n  [学习资料](http://caibaojian.com/book/)\n</div>\n","slug":"something","published":1,"updated":"2017-09-19T15:12:25.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7ub6kxv0006m5p16qbxt5yv","content":"<style>\n  .boxbox{\n    border: 2px dashed #ddd;\n    padding: 0 20px;\n    margin-bottom: 20px;\n  }\n</style>\n\n<div class=\"boxbox\"><br>DOM文档加载的步骤为：<br>1. 解析HTML结构。<br>2. 加载外部脚本和样式表文件。<br>3. 解析并执行脚本代码。<br>4. DOM树构建完成。// DOMContentLoaded<br>5. 加载图片等外部文件。<br>6. 页面加载完毕。// load<br><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'DOMContentLoaded'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// something...</span></div><div class=\"line\">&#125;, <span class=\"literal\">false</span>)</div><div class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">\"load\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// something...</span></div><div class=\"line\">&#125;, <span class=\"literal\">false</span>);</div></pre></td></tr></table></figure><br><br></div>\n\n<div class=\"boxbox\"><br>innerHTML: 从对象的起始位置到终止位置的全部内容,不包括Html标签。<br>outerHTML: 除了包含innerHTML的全部内容外, 还包含对象标签本身。<br>demo:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div id=<span class=\"string\">\"test\"</span>&gt; </div><div class=\"line\">   &lt;span style=<span class=\"string\">\"color:red\"</span>&gt;test1&lt;<span class=\"regexp\">/span&gt; test2 </span></div><div class=\"line\"><span class=\"regexp\">&lt;/</span>div&gt;</div><div class=\"line\"><span class=\"comment\">// innerHTML: \"&lt;span style=\"color:red\"&gt;test1&lt;/span&gt; test2 \"</span></div><div class=\"line\"><span class=\"comment\">// outerHTML: \"&lt;div id=\"test\"&gt;&lt;span style=\"color:red\"&gt;test1&lt;/span&gt; test2 &lt;/div&gt;\"</span></div></pre></td></tr></table></figure><br><br></div>\n\n<div class=\"boxbox\"><br>  <a href=\"http://caibaojian.com/book/\" target=\"_blank\" rel=\"external\">学习资料</a><br></div>\n","site":{"data":{}},"excerpt":"","more":"<style>\n  .boxbox{\n    border: 2px dashed #ddd;\n    padding: 0 20px;\n    margin-bottom: 20px;\n  }\n</style>\n\n<div class=\"boxbox\"><br>DOM文档加载的步骤为：<br>1. 解析HTML结构。<br>2. 加载外部脚本和样式表文件。<br>3. 解析并执行脚本代码。<br>4. DOM树构建完成。// DOMContentLoaded<br>5. 加载图片等外部文件。<br>6. 页面加载完毕。// load<br><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'DOMContentLoaded'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// something...</span></div><div class=\"line\">&#125;, <span class=\"literal\">false</span>)</div><div class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">\"load\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// something...</span></div><div class=\"line\">&#125;, <span class=\"literal\">false</span>);</div></pre></td></tr></table></figure><br><br></div>\n\n<div class=\"boxbox\"><br>innerHTML: 从对象的起始位置到终止位置的全部内容,不包括Html标签。<br>outerHTML: 除了包含innerHTML的全部内容外, 还包含对象标签本身。<br>demo:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div id=<span class=\"string\">\"test\"</span>&gt; </div><div class=\"line\">   &lt;span style=<span class=\"string\">\"color:red\"</span>&gt;test1&lt;<span class=\"regexp\">/span&gt; test2 </span></div><div class=\"line\"><span class=\"regexp\">&lt;/</span>div&gt;</div><div class=\"line\"><span class=\"comment\">// innerHTML: \"&lt;span style=\"color:red\"&gt;test1&lt;/span&gt; test2 \"</span></div><div class=\"line\"><span class=\"comment\">// outerHTML: \"&lt;div id=\"test\"&gt;&lt;span style=\"color:red\"&gt;test1&lt;/span&gt; test2 &lt;/div&gt;\"</span></div></pre></td></tr></table></figure><br><br></div>\n\n<div class=\"boxbox\"><br>  <a href=\"http://caibaojian.com/book/\" target=\"_blank\" rel=\"external\">学习资料</a><br></div>\n"},{"title":"syncRequest","date":"2017-09-21T05:13:47.000Z","_content":"``` javascript\n/**\n  * 同步请求\n  * @param {any} obj 请求对象\n  * @returns {promise} http\n  */\nfunction syncRequest ({ method = 'GET', url, data, headers = {} }) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest()\n    xhr.open(method, url, false)\n    xhr.setRequestHeader('Content-Type', 'application/json;charset=utf-8')\n\n    Object.keys(headers).forEach(header => {\n      xhr.setRequestHeader(header, headers[header])\n    })\n\n    xhr.onload = () => {\n      if (xhr.readyState !== 4) {\n        return\n      }\n      let responseContent\n      try {\n        responseContent = JSON.parse(xhr.responseText)\n      } catch (err) {\n        // there is error\n      }\n      responseContent = responseContent || xhr.responseText\n\n      if (xhr.status === 200) {\n        resolve(responseContent)\n      } else {\n        reject(responseContent)\n      }\n    }\n\n    xhr.send(JSON.stringify(data))\n  })\n}\n\nsyncRequest({\n  method: 'put',\n  url: 'xxx',\n  data: {},\n  headers: {\n    Accept: 'application/json, text/plain, */*; charset=utf-8',\n  },\n}).then((res) => {\n  // something...\n}).catch((err) => {\n  // something...\n})\n```","source":"_posts/syncRequest.md","raw":"---\ntitle: syncRequest\ndate: 2017-09-21 13:13:47\ntags:\n---\n``` javascript\n/**\n  * 同步请求\n  * @param {any} obj 请求对象\n  * @returns {promise} http\n  */\nfunction syncRequest ({ method = 'GET', url, data, headers = {} }) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest()\n    xhr.open(method, url, false)\n    xhr.setRequestHeader('Content-Type', 'application/json;charset=utf-8')\n\n    Object.keys(headers).forEach(header => {\n      xhr.setRequestHeader(header, headers[header])\n    })\n\n    xhr.onload = () => {\n      if (xhr.readyState !== 4) {\n        return\n      }\n      let responseContent\n      try {\n        responseContent = JSON.parse(xhr.responseText)\n      } catch (err) {\n        // there is error\n      }\n      responseContent = responseContent || xhr.responseText\n\n      if (xhr.status === 200) {\n        resolve(responseContent)\n      } else {\n        reject(responseContent)\n      }\n    }\n\n    xhr.send(JSON.stringify(data))\n  })\n}\n\nsyncRequest({\n  method: 'put',\n  url: 'xxx',\n  data: {},\n  headers: {\n    Accept: 'application/json, text/plain, */*; charset=utf-8',\n  },\n}).then((res) => {\n  // something...\n}).catch((err) => {\n  // something...\n})\n```","slug":"syncRequest","published":1,"updated":"2017-09-21T05:20:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7ub6kxw0007m5p1exlgex72","content":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">  * 同步请求</span></div><div class=\"line\"><span class=\"comment\">  * @param &#123;any&#125; obj 请求对象</span></div><div class=\"line\"><span class=\"comment\">  * @returns &#123;promise&#125; http</span></div><div class=\"line\"><span class=\"comment\">  */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">syncRequest</span> (<span class=\"params\">&#123; method = <span class=\"string\">'GET'</span>, url, data, headers = &#123;&#125; &#125;</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">const</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest()</div><div class=\"line\">    xhr.open(method, url, <span class=\"literal\">false</span>)</div><div class=\"line\">    xhr.setRequestHeader(<span class=\"string\">'Content-Type'</span>, <span class=\"string\">'application/json;charset=utf-8'</span>)</div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">Object</span>.keys(headers).forEach(<span class=\"function\"><span class=\"params\">header</span> =&gt;</span> &#123;</div><div class=\"line\">      xhr.setRequestHeader(header, headers[header])</div><div class=\"line\">    &#125;)</div><div class=\"line\"></div><div class=\"line\">    xhr.onload = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</div><div class=\"line\">      <span class=\"keyword\">if</span> (xhr.readyState !== <span class=\"number\">4</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span></div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"keyword\">let</span> responseContent</div><div class=\"line\">      <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        responseContent = <span class=\"built_in\">JSON</span>.parse(xhr.responseText)</div><div class=\"line\">      &#125; <span class=\"keyword\">catch</span> (err) &#123;</div><div class=\"line\">        <span class=\"comment\">// there is error</span></div><div class=\"line\">      &#125;</div><div class=\"line\">      responseContent = responseContent || xhr.responseText</div><div class=\"line\"></div><div class=\"line\">      <span class=\"keyword\">if</span> (xhr.status === <span class=\"number\">200</span>) &#123;</div><div class=\"line\">        resolve(responseContent)</div><div class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        reject(responseContent)</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    xhr.send(<span class=\"built_in\">JSON</span>.stringify(data))</div><div class=\"line\">  &#125;)</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">syncRequest(&#123;</div><div class=\"line\">  method: <span class=\"string\">'put'</span>,</div><div class=\"line\">  url: <span class=\"string\">'xxx'</span>,</div><div class=\"line\">  data: &#123;&#125;,</div><div class=\"line\">  headers: &#123;</div><div class=\"line\">    Accept: <span class=\"string\">'application/json, text/plain, */*; charset=utf-8'</span>,</div><div class=\"line\">  &#125;,</div><div class=\"line\">&#125;).then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</div><div class=\"line\">  <span class=\"comment\">// something...</span></div><div class=\"line\">&#125;).catch(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</div><div class=\"line\">  <span class=\"comment\">// something...</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">  * 同步请求</span></div><div class=\"line\"><span class=\"comment\">  * @param &#123;any&#125; obj 请求对象</span></div><div class=\"line\"><span class=\"comment\">  * @returns &#123;promise&#125; http</span></div><div class=\"line\"><span class=\"comment\">  */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">syncRequest</span> (<span class=\"params\">&#123; method = <span class=\"string\">'GET'</span>, url, data, headers = &#123;&#125; &#125;</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">const</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest()</div><div class=\"line\">    xhr.open(method, url, <span class=\"literal\">false</span>)</div><div class=\"line\">    xhr.setRequestHeader(<span class=\"string\">'Content-Type'</span>, <span class=\"string\">'application/json;charset=utf-8'</span>)</div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">Object</span>.keys(headers).forEach(<span class=\"function\"><span class=\"params\">header</span> =&gt;</span> &#123;</div><div class=\"line\">      xhr.setRequestHeader(header, headers[header])</div><div class=\"line\">    &#125;)</div><div class=\"line\"></div><div class=\"line\">    xhr.onload = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</div><div class=\"line\">      <span class=\"keyword\">if</span> (xhr.readyState !== <span class=\"number\">4</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span></div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"keyword\">let</span> responseContent</div><div class=\"line\">      <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        responseContent = <span class=\"built_in\">JSON</span>.parse(xhr.responseText)</div><div class=\"line\">      &#125; <span class=\"keyword\">catch</span> (err) &#123;</div><div class=\"line\">        <span class=\"comment\">// there is error</span></div><div class=\"line\">      &#125;</div><div class=\"line\">      responseContent = responseContent || xhr.responseText</div><div class=\"line\"></div><div class=\"line\">      <span class=\"keyword\">if</span> (xhr.status === <span class=\"number\">200</span>) &#123;</div><div class=\"line\">        resolve(responseContent)</div><div class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        reject(responseContent)</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    xhr.send(<span class=\"built_in\">JSON</span>.stringify(data))</div><div class=\"line\">  &#125;)</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">syncRequest(&#123;</div><div class=\"line\">  method: <span class=\"string\">'put'</span>,</div><div class=\"line\">  url: <span class=\"string\">'xxx'</span>,</div><div class=\"line\">  data: &#123;&#125;,</div><div class=\"line\">  headers: &#123;</div><div class=\"line\">    Accept: <span class=\"string\">'application/json, text/plain, */*; charset=utf-8'</span>,</div><div class=\"line\">  &#125;,</div><div class=\"line\">&#125;).then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</div><div class=\"line\">  <span class=\"comment\">// something...</span></div><div class=\"line\">&#125;).catch(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</div><div class=\"line\">  <span class=\"comment\">// something...</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>"},{"title":"使用git钩子做eslint校验","date":"2017-09-21T09:48:59.000Z","_content":"[demo地址](https://github.com/weitongtong/git-eslint-hook)\n\n## git hook\n\n在 git 中，执行 commit 、 push 等特殊事件时，都会触发执行一个或多个任意的 shell 脚本，我们称之为git钩子，它存放在 .git/hooks 目录下，我们可以看到目录下有 commit-msg.sample 、pre-commit.sample 等文件，这些都是案例文件，不会执行，要想执行的话把后面的 .sample 后缀去掉就可以了。\n\n钩子从执行顺序上分两类：\n* 前置（pre）钩子，在动作完成前调用\n* 后置（post）钩子，在动作完成后执行\n\n通常情况下，**如果前置钩子一非零状态下退出，那么git动作就会终止**，这样我们就可以在commit前对提交的内容做一些校验，如果不符合规定就不让提交。\n\n> 钩子默认是不会继承的，也就是说如果你从仓库clone下来的版本库是没有这些钩子的。\n\n## pre-commit\n\n.git/hooks 目录下的都是命令文件，我是看不懂的，咋办？\n别急 看这个 [pre-commit](https://github.com/observing/pre-commit)\n然后，我们就不用手动去修改 .git/hooks/commit-msg 文件了\n\n## eslint\n[eslint](https://github.com/eslint/eslint)\n``` bash\n$ sudo npm i eslint -g\n$ mkdir demo && cd demo\n$ eslint --init // 会自动创建 .eslintrc.js\n$ touch .eslintignore // 创建 .eslintignore\n$ eslint index.js // eslint检测 index.js 文件\n```\n\n最后，看重头戏，package.json配置：\n``` json\n{\n  \"name\": \"eslint-demo\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \".eslintrc.js\",\n  \"scripts\": {\n    \"test\": \"node_modules/.bin/eslint src\"\n  },\n  \"pre-commit\": [\n    \"test\"\n  ],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"devDependencies\": {\n    \"eslint\": \"^3.10.2\",\n    \"pre-commit\": \"^1.2.2\"\n  }\n}\n```\n当我们 commit 的时候 就会去执行 npm run test ，如果有异常就会终止 git 的操作了。暂时先到这吧，后续再补充。。。","source":"_posts/使用git钩子做eslint校验.md","raw":"---\ntitle: 使用git钩子做eslint校验\ndate: 2017-09-21 17:48:59\ntags:\n---\n[demo地址](https://github.com/weitongtong/git-eslint-hook)\n\n## git hook\n\n在 git 中，执行 commit 、 push 等特殊事件时，都会触发执行一个或多个任意的 shell 脚本，我们称之为git钩子，它存放在 .git/hooks 目录下，我们可以看到目录下有 commit-msg.sample 、pre-commit.sample 等文件，这些都是案例文件，不会执行，要想执行的话把后面的 .sample 后缀去掉就可以了。\n\n钩子从执行顺序上分两类：\n* 前置（pre）钩子，在动作完成前调用\n* 后置（post）钩子，在动作完成后执行\n\n通常情况下，**如果前置钩子一非零状态下退出，那么git动作就会终止**，这样我们就可以在commit前对提交的内容做一些校验，如果不符合规定就不让提交。\n\n> 钩子默认是不会继承的，也就是说如果你从仓库clone下来的版本库是没有这些钩子的。\n\n## pre-commit\n\n.git/hooks 目录下的都是命令文件，我是看不懂的，咋办？\n别急 看这个 [pre-commit](https://github.com/observing/pre-commit)\n然后，我们就不用手动去修改 .git/hooks/commit-msg 文件了\n\n## eslint\n[eslint](https://github.com/eslint/eslint)\n``` bash\n$ sudo npm i eslint -g\n$ mkdir demo && cd demo\n$ eslint --init // 会自动创建 .eslintrc.js\n$ touch .eslintignore // 创建 .eslintignore\n$ eslint index.js // eslint检测 index.js 文件\n```\n\n最后，看重头戏，package.json配置：\n``` json\n{\n  \"name\": \"eslint-demo\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \".eslintrc.js\",\n  \"scripts\": {\n    \"test\": \"node_modules/.bin/eslint src\"\n  },\n  \"pre-commit\": [\n    \"test\"\n  ],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"devDependencies\": {\n    \"eslint\": \"^3.10.2\",\n    \"pre-commit\": \"^1.2.2\"\n  }\n}\n```\n当我们 commit 的时候 就会去执行 npm run test ，如果有异常就会终止 git 的操作了。暂时先到这吧，后续再补充。。。","slug":"使用git钩子做eslint校验","published":1,"updated":"2017-09-21T10:19:25.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7ub6ky10008m5p1097o79os","content":"<p><a href=\"https://github.com/weitongtong/git-eslint-hook\" target=\"_blank\" rel=\"external\">demo地址</a></p>\n<h2 id=\"git-hook\"><a href=\"#git-hook\" class=\"headerlink\" title=\"git hook\"></a>git hook</h2><p>在 git 中，执行 commit 、 push 等特殊事件时，都会触发执行一个或多个任意的 shell 脚本，我们称之为git钩子，它存放在 .git/hooks 目录下，我们可以看到目录下有 commit-msg.sample 、pre-commit.sample 等文件，这些都是案例文件，不会执行，要想执行的话把后面的 .sample 后缀去掉就可以了。</p>\n<p>钩子从执行顺序上分两类：</p>\n<ul>\n<li>前置（pre）钩子，在动作完成前调用</li>\n<li>后置（post）钩子，在动作完成后执行</li>\n</ul>\n<p>通常情况下，<strong>如果前置钩子一非零状态下退出，那么git动作就会终止</strong>，这样我们就可以在commit前对提交的内容做一些校验，如果不符合规定就不让提交。</p>\n<blockquote>\n<p>钩子默认是不会继承的，也就是说如果你从仓库clone下来的版本库是没有这些钩子的。</p>\n</blockquote>\n<h2 id=\"pre-commit\"><a href=\"#pre-commit\" class=\"headerlink\" title=\"pre-commit\"></a>pre-commit</h2><p>.git/hooks 目录下的都是命令文件，我是看不懂的，咋办？<br>别急 看这个 <a href=\"https://github.com/observing/pre-commit\" target=\"_blank\" rel=\"external\">pre-commit</a><br>然后，我们就不用手动去修改 .git/hooks/commit-msg 文件了</p>\n<h2 id=\"eslint\"><a href=\"#eslint\" class=\"headerlink\" title=\"eslint\"></a>eslint</h2><p><a href=\"https://github.com/eslint/eslint\" target=\"_blank\" rel=\"external\">eslint</a><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo npm i eslint -g</div><div class=\"line\">$ mkdir demo &amp;&amp; <span class=\"built_in\">cd</span> demo</div><div class=\"line\">$ eslint --init // 会自动创建 .eslintrc.js</div><div class=\"line\">$ touch .eslintignore // 创建 .eslintignore</div><div class=\"line\">$ eslint index.js // eslint检测 index.js 文件</div></pre></td></tr></table></figure></p>\n<p>最后，看重头戏，package.json配置：<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"eslint-demo\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.0.0\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"main\"</span>: <span class=\"string\">\".eslintrc.js\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"scripts\"</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">\"test\"</span>: <span class=\"string\">\"node_modules/.bin/eslint src\"</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">\"pre-commit\"</span>: [</div><div class=\"line\">    <span class=\"string\">\"test\"</span></div><div class=\"line\">  ],</div><div class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"license\"</span>: <span class=\"string\">\"ISC\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"devDependencies\"</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">\"eslint\"</span>: <span class=\"string\">\"^3.10.2\"</span>,</div><div class=\"line\">    <span class=\"attr\">\"pre-commit\"</span>: <span class=\"string\">\"^1.2.2\"</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>当我们 commit 的时候 就会去执行 npm run test ，如果有异常就会终止 git 的操作了。暂时先到这吧，后续再补充。。。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://github.com/weitongtong/git-eslint-hook\" target=\"_blank\" rel=\"external\">demo地址</a></p>\n<h2 id=\"git-hook\"><a href=\"#git-hook\" class=\"headerlink\" title=\"git hook\"></a>git hook</h2><p>在 git 中，执行 commit 、 push 等特殊事件时，都会触发执行一个或多个任意的 shell 脚本，我们称之为git钩子，它存放在 .git/hooks 目录下，我们可以看到目录下有 commit-msg.sample 、pre-commit.sample 等文件，这些都是案例文件，不会执行，要想执行的话把后面的 .sample 后缀去掉就可以了。</p>\n<p>钩子从执行顺序上分两类：</p>\n<ul>\n<li>前置（pre）钩子，在动作完成前调用</li>\n<li>后置（post）钩子，在动作完成后执行</li>\n</ul>\n<p>通常情况下，<strong>如果前置钩子一非零状态下退出，那么git动作就会终止</strong>，这样我们就可以在commit前对提交的内容做一些校验，如果不符合规定就不让提交。</p>\n<blockquote>\n<p>钩子默认是不会继承的，也就是说如果你从仓库clone下来的版本库是没有这些钩子的。</p>\n</blockquote>\n<h2 id=\"pre-commit\"><a href=\"#pre-commit\" class=\"headerlink\" title=\"pre-commit\"></a>pre-commit</h2><p>.git/hooks 目录下的都是命令文件，我是看不懂的，咋办？<br>别急 看这个 <a href=\"https://github.com/observing/pre-commit\" target=\"_blank\" rel=\"external\">pre-commit</a><br>然后，我们就不用手动去修改 .git/hooks/commit-msg 文件了</p>\n<h2 id=\"eslint\"><a href=\"#eslint\" class=\"headerlink\" title=\"eslint\"></a>eslint</h2><p><a href=\"https://github.com/eslint/eslint\" target=\"_blank\" rel=\"external\">eslint</a><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo npm i eslint -g</div><div class=\"line\">$ mkdir demo &amp;&amp; <span class=\"built_in\">cd</span> demo</div><div class=\"line\">$ eslint --init // 会自动创建 .eslintrc.js</div><div class=\"line\">$ touch .eslintignore // 创建 .eslintignore</div><div class=\"line\">$ eslint index.js // eslint检测 index.js 文件</div></pre></td></tr></table></figure></p>\n<p>最后，看重头戏，package.json配置：<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"eslint-demo\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"1.0.0\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"main\"</span>: <span class=\"string\">\".eslintrc.js\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"scripts\"</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">\"test\"</span>: <span class=\"string\">\"node_modules/.bin/eslint src\"</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">\"pre-commit\"</span>: [</div><div class=\"line\">    <span class=\"string\">\"test\"</span></div><div class=\"line\">  ],</div><div class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"license\"</span>: <span class=\"string\">\"ISC\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"devDependencies\"</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">\"eslint\"</span>: <span class=\"string\">\"^3.10.2\"</span>,</div><div class=\"line\">    <span class=\"attr\">\"pre-commit\"</span>: <span class=\"string\">\"^1.2.2\"</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>当我们 commit 的时候 就会去执行 npm run test ，如果有异常就会终止 git 的操作了。暂时先到这吧，后续再补充。。。</p>\n"},{"title":"关于vue","date":"2017-09-18T07:41:30.000Z","_content":"\n生命周期：\n<img style=\"margin: 0 auto;\" src=\"http://oifogbmox.bkt.clouddn.com/170918_2.png\">\n\n1. vue实例\n  ``` javascript\n  var vm = new Vue({\n    el: '#app', // 挂载点 实例挂载之后，元素可以用 vm.$el 访问\n    template: // 字符串模板，模板将会 替换 挂载的元素。如果选项中包含 render 函数，则 template 将被忽略\n    data: {\n      message: 'hello, world'\n    },\n  })\n  ```\n2. vue.extend, vue.component\n  ``` javascript\n  var myComponentOption = {\n    template: '<div>{{message}}</div>',\n    data() {\n      return {\n      }\n    },\n    props: ['message']\n  }\n  var Bvue = Vue.extend(bComponentOption)\n  var bVue = new Bvue({\n    el: '#bb', // way-1\n    propsData: {\n      message: 'hello vue',\n    }\n  })\n  // way-2\n  // bVue.$mount('#bb')\n\n  // way-3\n  // bVue.$mount()\n  // document.getElementById('bb').appendChild(bVue.$el)\n\n  // 注册全局组件\n  var bComponent = Vue.component('b-component', Bvue)\n\n  bVue instanceof Vue // true\n  bComponent instanceof Vue // false\n  ```\n","source":"_posts/关于vue.md","raw":"---\ntitle: 关于vue\ndate: 2017-09-18 15:41:30\ntags:\n---\n\n生命周期：\n<img style=\"margin: 0 auto;\" src=\"http://oifogbmox.bkt.clouddn.com/170918_2.png\">\n\n1. vue实例\n  ``` javascript\n  var vm = new Vue({\n    el: '#app', // 挂载点 实例挂载之后，元素可以用 vm.$el 访问\n    template: // 字符串模板，模板将会 替换 挂载的元素。如果选项中包含 render 函数，则 template 将被忽略\n    data: {\n      message: 'hello, world'\n    },\n  })\n  ```\n2. vue.extend, vue.component\n  ``` javascript\n  var myComponentOption = {\n    template: '<div>{{message}}</div>',\n    data() {\n      return {\n      }\n    },\n    props: ['message']\n  }\n  var Bvue = Vue.extend(bComponentOption)\n  var bVue = new Bvue({\n    el: '#bb', // way-1\n    propsData: {\n      message: 'hello vue',\n    }\n  })\n  // way-2\n  // bVue.$mount('#bb')\n\n  // way-3\n  // bVue.$mount()\n  // document.getElementById('bb').appendChild(bVue.$el)\n\n  // 注册全局组件\n  var bComponent = Vue.component('b-component', Bvue)\n\n  bVue instanceof Vue // true\n  bComponent instanceof Vue // false\n  ```\n","slug":"关于vue","published":1,"updated":"2017-09-18T08:27:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7ub6ky30009m5p1605yz890","content":"<p>生命周期：<br><img style=\"margin: 0 auto;\" src=\"http://oifogbmox.bkt.clouddn.com/170918_2.png\"></p>\n<ol>\n<li><p>vue实例</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  el: <span class=\"string\">'#app'</span>, <span class=\"comment\">// 挂载点 实例挂载之后，元素可以用 vm.$el 访问</span></div><div class=\"line\">  template: <span class=\"comment\">// 字符串模板，模板将会 替换 挂载的元素。如果选项中包含 render 函数，则 template 将被忽略</span></div><div class=\"line\">  data: &#123;</div><div class=\"line\">    message: <span class=\"string\">'hello, world'</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n</li>\n<li><p>vue.extend, vue.component</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> myComponentOption = &#123;</div><div class=\"line\">  template: <span class=\"string\">'&lt;div&gt;&#123;&#123;message&#125;&#125;&lt;/div&gt;'</span>,</div><div class=\"line\">  data() &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  props: [<span class=\"string\">'message'</span>]</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">var</span> Bvue = Vue.extend(bComponentOption)</div><div class=\"line\"><span class=\"keyword\">var</span> bVue = <span class=\"keyword\">new</span> Bvue(&#123;</div><div class=\"line\">  el: <span class=\"string\">'#bb'</span>, <span class=\"comment\">// way-1</span></div><div class=\"line\">  propsData: &#123;</div><div class=\"line\">    message: <span class=\"string\">'hello vue'</span>,</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"comment\">// way-2</span></div><div class=\"line\"><span class=\"comment\">// bVue.$mount('#bb')</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// way-3</span></div><div class=\"line\"><span class=\"comment\">// bVue.$mount()</span></div><div class=\"line\"><span class=\"comment\">// document.getElementById('bb').appendChild(bVue.$el)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 注册全局组件</span></div><div class=\"line\"><span class=\"keyword\">var</span> bComponent = Vue.component(<span class=\"string\">'b-component'</span>, Bvue)</div><div class=\"line\"></div><div class=\"line\">bVue <span class=\"keyword\">instanceof</span> Vue <span class=\"comment\">// true</span></div><div class=\"line\">bComponent <span class=\"keyword\">instanceof</span> Vue <span class=\"comment\">// false</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>生命周期：<br><img style=\"margin: 0 auto;\" src=\"http://oifogbmox.bkt.clouddn.com/170918_2.png\"></p>\n<ol>\n<li><p>vue实例</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  el: <span class=\"string\">'#app'</span>, <span class=\"comment\">// 挂载点 实例挂载之后，元素可以用 vm.$el 访问</span></div><div class=\"line\">  template: <span class=\"comment\">// 字符串模板，模板将会 替换 挂载的元素。如果选项中包含 render 函数，则 template 将被忽略</span></div><div class=\"line\">  data: &#123;</div><div class=\"line\">    message: <span class=\"string\">'hello, world'</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n</li>\n<li><p>vue.extend, vue.component</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> myComponentOption = &#123;</div><div class=\"line\">  template: <span class=\"string\">'&lt;div&gt;&#123;&#123;message&#125;&#125;&lt;/div&gt;'</span>,</div><div class=\"line\">  data() &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  props: [<span class=\"string\">'message'</span>]</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">var</span> Bvue = Vue.extend(bComponentOption)</div><div class=\"line\"><span class=\"keyword\">var</span> bVue = <span class=\"keyword\">new</span> Bvue(&#123;</div><div class=\"line\">  el: <span class=\"string\">'#bb'</span>, <span class=\"comment\">// way-1</span></div><div class=\"line\">  propsData: &#123;</div><div class=\"line\">    message: <span class=\"string\">'hello vue'</span>,</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"comment\">// way-2</span></div><div class=\"line\"><span class=\"comment\">// bVue.$mount('#bb')</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// way-3</span></div><div class=\"line\"><span class=\"comment\">// bVue.$mount()</span></div><div class=\"line\"><span class=\"comment\">// document.getElementById('bb').appendChild(bVue.$el)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 注册全局组件</span></div><div class=\"line\"><span class=\"keyword\">var</span> bComponent = Vue.component(<span class=\"string\">'b-component'</span>, Bvue)</div><div class=\"line\"></div><div class=\"line\">bVue <span class=\"keyword\">instanceof</span> Vue <span class=\"comment\">// true</span></div><div class=\"line\">bComponent <span class=\"keyword\">instanceof</span> Vue <span class=\"comment\">// false</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n"},{"title":"实现一个CMD模块加载器","date":"2017-09-20T03:02:58.000Z","_content":"\n[资料](http://blog.csdn.net/zhoujie_zhoujie/article/details/70173430)\n\n\n## 模块加载流程\n\n  ![image](http://oifogbmox.bkt.clouddn.com/170920-cmd.png)\n\n  1. 首先，通过 use 方法来加载入口模块，并接收一个回调函数， 当模块加载完成， 会调用回调函数，并传入对应的模块。use 方法会 check 模块有没有缓存，如果有，则从缓存中获取模块，如果没有，则创建并加载模块。\n  2. 获取到模块后，模块可能还没有 load 完成，所以需要在模块上绑定一个 “complete” 事件，模块加载完成会触发这个事件，这时候才调用回调函数。\n  3. 创建一个模块时，id就是模块的地址，通过创建 script 标签的方式异步加载模块的代码（factory），factory 加载完成后，会 check factory 中有没有 require 别的子模块:\n    - 如果有，继续加载其子模块，并在子模块上绑定 “complete” 事件，来触发本身 的 “complete” 事件；\n    - 如果没有则直接触发本身的 “complete” 事件。\n  4. 如果子模块中还有依赖，则会递归这个过程。\n  5. 通过事件由里到外的传递，当所有依赖的模块都 complete 的时候，最外层的入口模块才会触发 “complete” 事件，use 方法中的回调函数才会被调用。","source":"_posts/实现一个CMD模块加载器.md","raw":"---\ntitle: 实现一个CMD模块加载器\ndate: 2017-09-20 11:02:58\ntags:\n---\n\n[资料](http://blog.csdn.net/zhoujie_zhoujie/article/details/70173430)\n\n\n## 模块加载流程\n\n  ![image](http://oifogbmox.bkt.clouddn.com/170920-cmd.png)\n\n  1. 首先，通过 use 方法来加载入口模块，并接收一个回调函数， 当模块加载完成， 会调用回调函数，并传入对应的模块。use 方法会 check 模块有没有缓存，如果有，则从缓存中获取模块，如果没有，则创建并加载模块。\n  2. 获取到模块后，模块可能还没有 load 完成，所以需要在模块上绑定一个 “complete” 事件，模块加载完成会触发这个事件，这时候才调用回调函数。\n  3. 创建一个模块时，id就是模块的地址，通过创建 script 标签的方式异步加载模块的代码（factory），factory 加载完成后，会 check factory 中有没有 require 别的子模块:\n    - 如果有，继续加载其子模块，并在子模块上绑定 “complete” 事件，来触发本身 的 “complete” 事件；\n    - 如果没有则直接触发本身的 “complete” 事件。\n  4. 如果子模块中还有依赖，则会递归这个过程。\n  5. 通过事件由里到外的传递，当所有依赖的模块都 complete 的时候，最外层的入口模块才会触发 “complete” 事件，use 方法中的回调函数才会被调用。","slug":"实现一个CMD模块加载器","published":1,"updated":"2017-09-20T15:36:39.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7ub6ky4000am5p175cr2h7s","content":"<p><a href=\"http://blog.csdn.net/zhoujie_zhoujie/article/details/70173430\" target=\"_blank\" rel=\"external\">资料</a></p>\n<h2 id=\"模块加载流程\"><a href=\"#模块加载流程\" class=\"headerlink\" title=\"模块加载流程\"></a>模块加载流程</h2><p>  <img src=\"http://oifogbmox.bkt.clouddn.com/170920-cmd.png\" alt=\"image\"></p>\n<ol>\n<li>首先，通过 use 方法来加载入口模块，并接收一个回调函数， 当模块加载完成， 会调用回调函数，并传入对应的模块。use 方法会 check 模块有没有缓存，如果有，则从缓存中获取模块，如果没有，则创建并加载模块。</li>\n<li>获取到模块后，模块可能还没有 load 完成，所以需要在模块上绑定一个 “complete” 事件，模块加载完成会触发这个事件，这时候才调用回调函数。</li>\n<li>创建一个模块时，id就是模块的地址，通过创建 script 标签的方式异步加载模块的代码（factory），factory 加载完成后，会 check factory 中有没有 require 别的子模块:<ul>\n<li>如果有，继续加载其子模块，并在子模块上绑定 “complete” 事件，来触发本身 的 “complete” 事件；</li>\n<li>如果没有则直接触发本身的 “complete” 事件。</li>\n</ul>\n</li>\n<li>如果子模块中还有依赖，则会递归这个过程。</li>\n<li>通过事件由里到外的传递，当所有依赖的模块都 complete 的时候，最外层的入口模块才会触发 “complete” 事件，use 方法中的回调函数才会被调用。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"http://blog.csdn.net/zhoujie_zhoujie/article/details/70173430\" target=\"_blank\" rel=\"external\">资料</a></p>\n<h2 id=\"模块加载流程\"><a href=\"#模块加载流程\" class=\"headerlink\" title=\"模块加载流程\"></a>模块加载流程</h2><p>  <img src=\"http://oifogbmox.bkt.clouddn.com/170920-cmd.png\" alt=\"image\"></p>\n<ol>\n<li>首先，通过 use 方法来加载入口模块，并接收一个回调函数， 当模块加载完成， 会调用回调函数，并传入对应的模块。use 方法会 check 模块有没有缓存，如果有，则从缓存中获取模块，如果没有，则创建并加载模块。</li>\n<li>获取到模块后，模块可能还没有 load 完成，所以需要在模块上绑定一个 “complete” 事件，模块加载完成会触发这个事件，这时候才调用回调函数。</li>\n<li>创建一个模块时，id就是模块的地址，通过创建 script 标签的方式异步加载模块的代码（factory），factory 加载完成后，会 check factory 中有没有 require 别的子模块:<ul>\n<li>如果有，继续加载其子模块，并在子模块上绑定 “complete” 事件，来触发本身 的 “complete” 事件；</li>\n<li>如果没有则直接触发本身的 “complete” 事件。</li>\n</ul>\n</li>\n<li>如果子模块中还有依赖，则会递归这个过程。</li>\n<li>通过事件由里到外的传递，当所有依赖的模块都 complete 的时候，最外层的入口模块才会触发 “complete” 事件，use 方法中的回调函数才会被调用。</li>\n</ol>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}